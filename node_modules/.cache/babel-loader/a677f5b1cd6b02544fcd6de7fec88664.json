{"ast":null,"code":"'use strict';\n/*\r\n*  Copyright (C) 1998-2022 by Northwoods Software Corporation. All Rights Reserved.\r\n*/\n// This file holds definitions of all standard shape figures -- string values for Shape.figure.\n// You do not need to load this file in order to use named Shape figure.\n// The following figures are built-in to the go.js library and thus do not need to be redefined:\n//   Rectangle, Square, RoundedRectangle, Border, Ellipse, Circle,\n//   TriangleRight, TriangleDown, TriangleLeft, TriangleUp, Triangle,\n//   LineH, LineV, None, BarH, BarV, MinusLine, PlusLine, XLine\n// If you need any of the other figures that are defined in this file, we suggest that you copy\n// just those definitions into your own code.  Do not load this file unless you really want to\n// define a lot of code that your app does not use and will not get garbage-collected.\n// The following functions and variables are used throughout this file:\n\n/**\r\n* @constructor\r\n* @param {string} name\r\n* @param {number} def\r\n* @param {number=} min defaults to zero\r\n* @param {number=} max defaults to Infinity\r\n* @class\r\n* This FigureParameter class describes various properties each parameter uses in figures.\r\n*/\n\nfunction FigureParameter(name, def, min, max) {\n  if (min === undefined\n  /*notpresent*/\n  ) min = 0.0;\n  if (max === undefined\n  /*notpresent*/\n  ) max = Infinity;\n  /** @type {string} */\n\n  this._name = name;\n  /** @type {number} */\n\n  this._defaultValue = def;\n  /** @type {number} */\n\n  this._minimum = min;\n  /** @type {number} */\n\n  this._maximum = max;\n}\n\n; // Public properties\n\n/**\r\n* Gets or sets the name of the figure.\r\n* @name FigureParamater#name\r\n\r\n* @return {string}\r\n*/\n\nObject.defineProperty(FigureParameter.prototype, \"name\", {\n  get: function get() {\n    return this._name;\n  },\n  set: function set(val) {\n    if (typeof val !== \"string\" || val === \"\") throw new Error(\"Shape name must be a valid string.\");\n    this._name = val;\n  }\n});\n/**\r\n* Gets or sets the default value for the parameter.\r\n* @name FigureParameter#defaultValue\r\n* @function\r\n* @return {number}\r\n*/\n\nObject.defineProperty(FigureParameter.prototype, \"defaultValue\", {\n  get: function get() {\n    return this._defaultValue;\n  },\n  set: function set(val) {\n    if (typeof val !== \"number\" || isNaN(val)) throw new Error(\"The default value must be a real number, not: \" + val);\n    this._defaultValue = val;\n  }\n});\n/**\r\n* Gets or sets the minimum value allowed for the figure parameter.\r\n* @name FigureParameter#minimum\r\n\r\n* @return {number}\r\n*/\n\nObject.defineProperty(FigureParameter.prototype, \"minimum\", {\n  get: function get() {\n    return this._minimum;\n  },\n  set: function set(val) {\n    if (typeof val !== \"number\" || isNaN(val)) throw new Error(\"Minimum must be a real number, not: \" + val);\n    this._minimum = val;\n  }\n});\n/**\r\n* Gets or sets the maximum value allowed for the figure parameter.\r\n* @name FigureParameter#maximum\r\n\r\n* @return {number}\r\n*/\n\nObject.defineProperty(FigureParameter.prototype, \"maximum\", {\n  get: function get() {\n    return this._maximum;\n  },\n  set: function set(val) {\n    if (typeof val !== \"number\" || isNaN(val)) throw new Error(\"Maximum must be a real number, not: \" + val);\n    this._maximum = val;\n  }\n});\ngo.Shape._FigureParameters = {};\n/*\r\n* This static function gets a FigureParameter for a particular figure name.\r\n* @param {String} figurename\r\n* @param {number} index, currently must be either 0 or 1\r\n* @return {FigureParameter}\r\n*/\n\ngo.Shape.getFigureParameter = function (figurename, index) {\n  var arr = go.Shape._FigureParameters[figurename];\n  if (!arr) return null;\n  return (\n    /** @type {FigureParmeter} */\n    arr[index]\n  );\n};\n/*\r\n* This static function sets a FigureParameter for a particular figure name.\r\n* @param {String} figurename\r\n* @param {number} index, currently must be either 0 or 1\r\n* @param {FigureParameter} figparam\r\n*/\n\n\ngo.Shape.setFigureParameter = function (figurename, index, figparam) {\n  if (!(figparam instanceof FigureParameter)) throw new Error(\"Third argument to Shape.setFigureParameter is not FigureParameter: \" + figparam);\n  if (figparam.defaultValue < figparam.minimum || figparam.defaultValue > figparam.maximum) throw new Error(\"defaultValue must be between minimum and maximum, not: \" + figparam.defaultValue);\n  var arr = go.Shape._FigureParameters[figurename];\n\n  if (!arr) {\n    arr = [];\n    go.Shape._FigureParameters[figurename] = arr;\n  }\n\n  arr[index] = figparam;\n};\n/** @ignore */\n\n\nvar _CachedPoints = [];\n/**\r\n* @ignore\r\n* @param {number} x\r\n* @param {number} y\r\n* @return {Point}\r\n*/\n\nfunction tempPointAt(x, y) {\n  var temp = _CachedPoints.pop();\n\n  if (temp === undefined) return new go.Point(x, y);\n  temp.x = x;\n  temp.y = y;\n  return temp;\n}\n\n;\n/**\r\n* @ignore\r\n* @return {Point}\r\n*/\n\nfunction tempPoint() {\n  var temp = _CachedPoints.pop();\n\n  if (temp === undefined) return new go.Point();\n  return temp;\n}\n\n;\n/**\r\n  * @ignore\r\n  * @param {Point} temp\r\n  */\n\nfunction freePoint(temp) {\n  _CachedPoints.push(temp);\n}\n\n;\n/**\r\n* @ignore\r\n* @param {number} p1x\r\n* @param {number} p1y\r\n* @param {number} p2x\r\n* @param {number} p2y\r\n* @param {number} q1x\r\n* @param {number} q1y\r\n* @param {number} q2x\r\n* @param {number} q2y\r\n* @param {Point} result\r\n* @return {Point}\r\n*/\n\nfunction getIntersection(p1x, p1y, p2x, p2y, q1x, q1y, q2x, q2y, result) {\n  var dx1 = p1x - p2x;\n  var dx2 = q1x - q2x;\n  var x;\n  var y;\n\n  if (dx1 === 0 || dx2 === 0) {\n    if (dx1 === 0) {\n      var m2 = (q1y - q2y) / dx2;\n      var b2 = q1y - m2 * q1x;\n      x = p1x;\n      y = m2 * x + b2;\n    } else {\n      var m1 = (p1y - p2y) / dx1;\n      var b1 = p1y - m1 * p1x;\n      x = q1x;\n      y = m1 * x + b1;\n    }\n  } else {\n    var m1 = (p1y - p2y) / dx1;\n    var m2 = (q1y - q2y) / dx2;\n    var b1 = p1y - m1 * p1x;\n    var b2 = q1y - m2 * q1x;\n    x = (b2 - b1) / (m1 - m2);\n    y = m1 * x + b1;\n  }\n\n  result.x = x;\n  result.y = y;\n  return result;\n}\n\n;\n/**\r\n* @ignore\r\n* @param {number} startx\r\n* @param {number} starty\r\n* @param {number} c1x\r\n* @param {number} c1y\r\n* @param {number} c2x\r\n* @param {number} c2y\r\n* @param {number} endx\r\n* @param {number} endy\r\n* @pararm {number} fraction\r\n* @param {Point} curve1cp1  // modified result control point\r\n* @param {Point} curve1cp2  // modified result control point\r\n* @param {Point} midpoint  // modified result\r\n* @param {Point} curve2cp1  // modified result control point\r\n* @param {Point} curve2cp2  // modified result control point\r\n*/\n\nfunction breakUpBezier(startx, starty, c1x, c1y, c2x, c2y, endx, endy, fraction, curve1cp1, curve1cp2, midpoint, curve2cp1, curve2cp2) {\n  var fo = 1 - fraction;\n  var so = fraction;\n  var m1x = startx * fo + c1x * so;\n  var m1y = starty * fo + c1y * so;\n  var m2x = c1x * fo + c2x * so;\n  var m2y = c1y * fo + c2y * so;\n  var m3x = c2x * fo + endx * so;\n  var m3y = c2y * fo + endy * so;\n  var m12x = m1x * fo + m2x * so;\n  var m12y = m1y * fo + m2y * so;\n  var m23x = m2x * fo + m3x * so;\n  var m23y = m2y * fo + m3y * so;\n  var m123x = m12x * fo + m23x * so;\n  var m123y = m12y * fo + m23y * so;\n  curve1cp1.x = m1x;\n  curve1cp1.y = m1y;\n  curve1cp2.x = m12x;\n  curve1cp2.y = m12y;\n  midpoint.x = m123x;\n  midpoint.y = m123y;\n  curve2cp1.x = m23x;\n  curve2cp1.y = m23y;\n  curve2cp2.x = m3x;\n  curve2cp2.y = m3y;\n}\n\n;\nvar GeneratorEllipseSpot1 = new go.Spot(0.156, 0.156);\nvar GeneratorEllipseSpot2 = new go.Spot(0.844, 0.844);\nvar KAPPA = 4 * ((Math.sqrt(2) - 1) / 3); // PREDEFINED figures, built into the v2.0 library:\n// These first few are commented out due to optimizations in the built-in definitions.\n//go.Shape.defineFigureGenerator(\"Rectangle\", function(shape, w, h) {  // predefined in 2.0\n//  var geo = new go.Geometry(go.Geometry.Rectangle);\n//  geo.startX = 0;\n//  geo.startY = 0;\n//  geo.endX = w;\n//  geo.endY = h;\n//  return geo;\n//});\n//go.Shape.defineFigureGenerator(\"Square\", function(shape, w, h) {  // predefined in 2.0\n//  var geo = new go.Geometry(go.Geometry.Rectangle);\n//  geo.startX = 0;\n//  geo.startY = 0;\n//  geo.endX = w;\n//  geo.endY = h;\n//  geo.defaultStretch = go.GraphObject.Uniform;\n//  return geo;\n//});\n\ngo.Shape.setFigureParameter(\"RoundedRectangle\", 0, new FigureParameter(\"CornerRounding\", 5));\ngo.Shape.defineFigureGenerator(\"RoundedRectangle\", function (shape, w, h) {\n  // predefined in 2.0\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < 0) param1 = 5; // default corner\n\n  param1 = Math.min(param1, w / 3);\n  param1 = Math.min(param1, h / 3);\n  var cpOffset = param1 * KAPPA;\n  var geo = new go.Geometry().add(new go.PathFigure(param1, 0, true).add(new go.PathSegment(go.PathSegment.Line, w - param1, 0)).add(new go.PathSegment(go.PathSegment.Bezier, w, param1, w - cpOffset, 0, w, cpOffset)).add(new go.PathSegment(go.PathSegment.Line, w, h - param1)).add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w, h - cpOffset, w - cpOffset, h)).add(new go.PathSegment(go.PathSegment.Line, param1, h)).add(new go.PathSegment(go.PathSegment.Bezier, 0, h - param1, cpOffset, h, 0, h - cpOffset)).add(new go.PathSegment(go.PathSegment.Line, 0, param1)).add(new go.PathSegment(go.PathSegment.Bezier, param1, 0, 0, cpOffset, cpOffset, 0).close()));\n\n  if (cpOffset > 1) {\n    geo.spot1 = new go.Spot(0, 0, cpOffset, cpOffset);\n    geo.spot2 = new go.Spot(1, 1, -cpOffset, -cpOffset);\n  }\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Border\", \"RoundedRectangle\"); // predefined in 2.0\n//go.Shape.defineFigureGenerator(\"Ellipse\", function(shape, w, h) {  // predefined in 2.0\n//  var geo = new go.Geometry(go.Geometry.Ellipse);\n//  geo.startX = 0;\n//  geo.startY = 0;\n//  geo.endX = w;\n//  geo.endY = h;\n//  geo.spot1 = GeneratorEllipseSpot1;\n//  geo.spot2 = GeneratorEllipseSpot2;\n//  return geo;\n//});\n//go.Shape.defineFigureGenerator(\"Circle\", function(shape, w, h) {  // predefined in 2.0\n//  var geo = new go.Geometry(go.Geometry.Ellipse);\n//  geo.startX = 0;\n//  geo.startY = 0;\n//  geo.endX = w;\n//  geo.endY = h;\n//  geo.spot1 = GeneratorEllipseSpot1;\n//  geo.spot2 = GeneratorEllipseSpot2;\n//  geo.defaultStretch = go.GraphObject.Uniform;\n//  return geo;\n//});\n\ngo.Shape.defineFigureGenerator(\"TriangleRight\", function (shape, w, h) {\n  // predefined in 2.0\n  return new go.Geometry().add(new go.PathFigure(0, 0).add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close())).setSpots(0, 0.25, 0.5, 0.75);\n});\ngo.Shape.defineFigureGenerator(\"TriangleDown\", function (shape, w, h) {\n  // predefined in 2.0\n  return new go.Geometry().add(new go.PathFigure(0, 0).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h).close())).setSpots(0.25, 0, 0.75, 0.5);\n});\ngo.Shape.defineFigureGenerator(\"TriangleLeft\", function (shape, w, h) {\n  // predefined in 2.0\n  return new go.Geometry().add(new go.PathFigure(w, h).add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h)).add(new go.PathSegment(go.PathSegment.Line, w, 0).close())).setSpots(0.5, 0.25, 1, 0.75);\n});\ngo.Shape.defineFigureGenerator(\"TriangleUp\", function (shape, w, h) {\n  // predefined in 2.0\n  return new go.Geometry().add(new go.PathFigure(w, h).add(new go.PathSegment(go.PathSegment.Line, 0, h)).add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0).close())).setSpots(0.25, 0.5, 0.75, 1);\n});\ngo.Shape.defineFigureGenerator(\"Triangle\", \"TriangleUp\"); // predefined in 2.0\n\ngo.Shape.defineFigureGenerator(\"Diamond\", function (shape, w, h) {\n  // predefined in 2.0\n  return new go.Geometry().add(new go.PathFigure(0.5 * w, 0).add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h)).add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h).close())).setSpots(0.25, 0.25, 0.75, 0.75);\n});\ngo.Shape.defineFigureGenerator(\"LineH\", function (shape, w, h) {\n  // predefined in 2.0\n  var geo = new go.Geometry(go.Geometry.Line);\n  geo.startX = 0;\n  geo.startY = h / 2;\n  geo.endX = w;\n  geo.endY = h / 2;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"LineV\", function (shape, w, h) {\n  // predefined in 2.0\n  var geo = new go.Geometry(go.Geometry.Line);\n  geo.startX = w / 2;\n  geo.startY = 0;\n  geo.endX = w / 2;\n  geo.endY = h;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BarH\", \"Rectangle\"); // predefined in 2.0\n\ngo.Shape.defineFigureGenerator(\"BarV\", \"Rectangle\"); // predefined in 2.0\n\ngo.Shape.defineFigureGenerator(\"MinusLine\", \"LineH\"); // predefined in 2.0\n\ngo.Shape.defineFigureGenerator(\"PlusLine\", function (shape, w, h) {\n  // predefined in 2.0\n  return new go.Geometry().add(new go.PathFigure(0, h / 2, false).add(new go.PathSegment(go.PathSegment.Line, w, h / 2)).add(new go.PathSegment(go.PathSegment.Move, w / 2, 0)).add(new go.PathSegment(go.PathSegment.Line, w / 2, h)));\n});\ngo.Shape.defineFigureGenerator(\"XLine\", function (shape, w, h) {\n  // predefined in 2.0\n  return new go.Geometry().add(new go.PathFigure(0, h, false).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Move, 0, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h)));\n});\ngo.Shape.defineFigureGenerator('LineRight', function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0.25 * w, 0, false).add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.5 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.25 * w, h)));\n});\ngo.Shape.defineFigureGenerator('LineDown', function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0.25 * h, false).add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.75 * h)).add(new go.PathSegment(go.PathSegment.Line, w, 0.25 * h)));\n});\ngo.Shape.defineFigureGenerator('LineLeft', function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0.75 * w, 0, false).add(new go.PathSegment(go.PathSegment.Line, 0.25 * w, 0.5 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, h)));\n});\ngo.Shape.defineFigureGenerator('LineUp', function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0.75 * h, false).add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.25 * h)).add(new go.PathSegment(go.PathSegment.Line, w, 0.75 * h)));\n}); // OPTIONAL figures, not predefined in the v2.0 library:\n\ngo.Shape.defineFigureGenerator(\"AsteriskLine\", function (shape, w, h) {\n  var offset = .2 / Math.SQRT2;\n  return new go.Geometry().add(new go.PathFigure(offset * w, (1 - offset) * h, false).add(new go.PathSegment(go.PathSegment.Line, (1 - offset) * w, offset * h)).add(new go.PathSegment(go.PathSegment.Move, offset * w, offset * h)).add(new go.PathSegment(go.PathSegment.Line, (1 - offset) * w, (1 - offset) * h)).add(new go.PathSegment(go.PathSegment.Move, 0, h / 2)).add(new go.PathSegment(go.PathSegment.Line, w, h / 2)).add(new go.PathSegment(go.PathSegment.Move, w / 2, 0)).add(new go.PathSegment(go.PathSegment.Line, w / 2, h)));\n});\ngo.Shape.defineFigureGenerator(\"CircleLine\", function (shape, w, h) {\n  var rad = w / 2;\n  var geo = new go.Geometry().add(new go.PathFigure(w, w / 2, false) // clockwise\n  .add(new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close()));\n  geo.spot1 = GeneratorEllipseSpot1;\n  geo.spot2 = GeneratorEllipseSpot2;\n  geo.defaultStretch = go.GraphObject.Uniform;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Line1\", function (shape, w, h) {\n  var geo = new go.Geometry(go.Geometry.Line);\n  geo.startX = 0;\n  geo.startY = 0;\n  geo.endX = w;\n  geo.endY = h;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Line2\", function (shape, w, h) {\n  var geo = new go.Geometry(go.Geometry.Line);\n  geo.startX = w;\n  geo.startY = 0;\n  geo.endX = 0;\n  geo.endY = h;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Curve1\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, false).add(new go.PathSegment(go.PathSegment.Bezier, w, h, KAPPA * w, 0, w, (1 - KAPPA) * h)));\n});\ngo.Shape.defineFigureGenerator(\"Curve2\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, false).add(new go.PathSegment(go.PathSegment.Bezier, w, h, 0, KAPPA * h, (1 - KAPPA) * w, h)));\n});\ngo.Shape.defineFigureGenerator(\"Curve3\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(w, 0, false).add(new go.PathSegment(go.PathSegment.Bezier, 0, h, w, KAPPA * h, KAPPA * w, h)));\n});\ngo.Shape.defineFigureGenerator(\"Curve4\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(w, 0, false).add(new go.PathSegment(go.PathSegment.Bezier, 0, h, (1 - KAPPA) * w, 0, 0, (1 - KAPPA) * h)));\n});\ngo.Shape.defineFigureGenerator(\"TriangleDownLeft\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, true).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close())).setSpots(0, 0.5, 0.5, 1);\n});\ngo.Shape.defineFigureGenerator(\"TriangleDownRight\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(w, 0, true).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close())).setSpots(0.5, 0.5, 1, 1);\n});\ngo.Shape.defineFigureGenerator(\"TriangleUpLeft\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, true).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close())).setSpots(0, 0, 0.5, 0.5);\n});\ngo.Shape.defineFigureGenerator(\"TriangleUpRight\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, true).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h).close())).setSpots(0.5, 0, 1, 0.5);\n});\ngo.Shape.defineFigureGenerator(\"RightTriangle\", \"TriangleDownLeft\");\ngo.Shape.setFigureParameter(\"Parallelogram1\", 0, new FigureParameter(\"Indent\", .1, -.99, .99));\ngo.Shape.defineFigureGenerator(\"Parallelogram1\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // indent's percent distance\n\n  if (isNaN(param1)) param1 = 0.1;else if (param1 < -1) param1 = -1;else if (param1 > 1) param1 = 1;\n  var indent = Math.abs(param1) * w;\n\n  if (param1 === 0) {\n    var geo = new go.Geometry(go.Geometry.Rectangle);\n    geo.startX = 0;\n    geo.startY = 0;\n    geo.endX = w;\n    geo.endY = h;\n    return geo;\n  } else {\n    var geo = new go.Geometry();\n\n    if (param1 > 0) {\n      geo.add(new go.PathFigure(indent, 0).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w - indent, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\n    } else {\n      // param1 < 0\n      geo.add(new go.PathFigure(0, 0).add(new go.PathSegment(go.PathSegment.Line, w - indent, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\n    }\n\n    if (indent < w / 2) {\n      geo.setSpots(indent / w, 0, (w - indent) / w, 1);\n    }\n\n    return geo;\n  }\n});\ngo.Shape.defineFigureGenerator(\"Parallelogram\", \"Parallelogram1\"); // alias\n// Parallelogram with absolutes instead of scaling\n\ngo.Shape.setFigureParameter(\"Parallelogram2\", 0, new FigureParameter(\"Indent\", 10, -Infinity, Infinity));\ngo.Shape.defineFigureGenerator(\"Parallelogram2\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // indent's x distance\n\n  if (isNaN(param1)) param1 = 10;else if (param1 < -w) param1 = -w;else if (param1 > w) param1 = w;\n  var indent = Math.abs(param1);\n\n  if (param1 === 0) {\n    var geo = new go.Geometry(go.Geometry.Rectangle);\n    geo.startX = 0;\n    geo.startY = 0;\n    geo.endX = w;\n    geo.endY = h;\n    return geo;\n  } else {\n    var geo = new go.Geometry();\n\n    if (param1 > 0) {\n      geo.add(new go.PathFigure(indent, 0).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w - indent, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\n    } else {\n      // param1 < 0\n      geo.add(new go.PathFigure(0, 0).add(new go.PathSegment(go.PathSegment.Line, w - indent, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\n    }\n\n    if (indent < w / 2) {\n      geo.setSpots(indent / w, 0, (w - indent) / w, 1);\n    }\n\n    return geo;\n  }\n});\ngo.Shape.setFigureParameter(\"Trapezoid1\", 0, new FigureParameter(\"Indent\", .2, -.99, .99));\ngo.Shape.defineFigureGenerator(\"Trapezoid1\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // indent's percent distance\n\n  if (isNaN(param1)) param1 = 0.2;else if (param1 < 0.5) param1 = -0.5;else if (param1 > 0.5) param1 = 0.5;\n  var indent = Math.abs(param1) * w;\n\n  if (param1 === 0) {\n    var geo = new go.Geometry(go.Geometry.Rectangle);\n    geo.startX = 0;\n    geo.startY = 0;\n    geo.endX = w;\n    geo.endY = h;\n    return geo;\n  } else {\n    var geo = new go.Geometry();\n\n    if (param1 > 0) {\n      geo.add(new go.PathFigure(indent, 0).add(new go.PathSegment(go.PathSegment.Line, w - indent, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\n    } else {\n      // param1 < 0\n      geo.add(new go.PathFigure(0, 0).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w - indent, h)).add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\n    }\n\n    if (indent < w / 2) {\n      geo.setSpots(indent / w, 0, (w - indent) / w, 1);\n    }\n\n    return geo;\n  }\n});\ngo.Shape.defineFigureGenerator(\"Trapezoid\", \"Trapezoid1\"); // alias\n// Trapezoid with absolutes instead of scaling\n\ngo.Shape.setFigureParameter(\"Trapezoid2\", 0, new FigureParameter(\"Indent\", 20, -Infinity, Infinity));\ngo.Shape.defineFigureGenerator(\"Trapezoid2\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // indent's x distance\n\n  if (isNaN(param1)) param1 = 20; // default value\n  else if (param1 < -w) param1 = -w / 2;else if (param1 > w) param1 = w / 2;\n  var indent = Math.abs(param1);\n\n  if (param1 === 0) {\n    var geo = new go.Geometry(go.Geometry.Rectangle);\n    geo.startX = 0;\n    geo.startY = 0;\n    geo.endX = w;\n    geo.endY = h;\n    return geo;\n  } else {\n    var geo = new go.Geometry();\n\n    if (param1 > 0) {\n      geo.add(new go.PathFigure(indent, 0).add(new go.PathSegment(go.PathSegment.Line, w - indent, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\n    } else {\n      // param1 < 0\n      geo.add(new go.PathFigure(0, 0).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w - indent, h)).add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\n    }\n\n    if (indent < w / 2) {\n      geo.setSpots(indent / w, 0, (w - indent) / w, 1);\n    }\n\n    return geo;\n  }\n});\ngo.Shape.setFigureParameter(\"ManualOperation\", 0, new FigureParameter(\"Indent\", 10, -Infinity, Infinity));\ngo.Shape.defineFigureGenerator(\"ManualOperation\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // Distance from topleft of bounding rectangle,\n  // in % of the total width, of the topleft corner\n\n  if (isNaN(param1)) param1 = 10; // default value\n  else if (param1 < -w) param1 = -w / 2;else if (param1 > w) param1 = w / 2;\n  var indent = Math.abs(param1);\n\n  if (param1 === 0) {\n    var geo = new go.Geometry(go.Geometry.Rectangle);\n    geo.startX = 0;\n    geo.startY = 0;\n    geo.endX = w;\n    geo.endY = h;\n    return geo;\n  } else {\n    var geo = new go.Geometry();\n\n    if (param1 > 0) {\n      geo.add(new go.PathFigure(0, 0).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w - indent, h)).add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\n    } else {\n      // param1 < 0\n      geo.add(new go.PathFigure(indent, 0).add(new go.PathSegment(go.PathSegment.Line, w - indent, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\n    }\n\n    if (indent < w / 2) {\n      geo.setSpots(indent / w, 0, (w - indent) / w, 1);\n    }\n\n    return geo;\n  }\n}); // The following functions are used by a group of regular figures that are defined below:\n\n/** @ignore */\n\nvar _CachedArrays = [];\n/**\r\n  * @ignore\r\n  * @return {Array}\r\n  */\n\nfunction tempArray() {\n  var temp = _CachedArrays.pop();\n\n  if (temp === undefined) return [];\n  return temp;\n}\n\n;\n/**\r\n  * @ignore\r\n  * @param {Array} a\r\n  */\n\nfunction freeArray(a) {\n  a.length = 0; // clear any references to objects\n\n  _CachedArrays.push(a);\n}\n\n;\n/**\r\n* @ignore\r\n* This allocates a temporary Array that should be freeArray()'ed by the caller.\r\n* @param {number} sides\r\n* @return {Array}\r\n*/\n\nfunction createPolygon(sides) {\n  // Point[] points = new Point[sides + 1];\n  var points = tempArray();\n  var radius = .5;\n  var center = .5;\n  var offsetAngle = Math.PI * 1.5;\n  var angle = 0; // Loop through each side of the polygon\n\n  for (var i = 0; i < sides; i++) {\n    angle = 2 * Math.PI / sides * i + offsetAngle;\n    points[i] = new go.Point(center + radius * Math.cos(angle), center + radius * Math.sin(angle));\n  } // Add the last line\n  // points[points.length - 1] = points[0];\n\n\n  points.push(points[0]);\n  return points;\n}\n\n;\n/**\r\n* @ignore\r\n* This allocates a temporary Array that should be freeArray()'ed by the caller.\r\n* @param {number} points\r\n* @return {Array}\r\n*/\n\nfunction createBurst(points) {\n  var star = createStar(points);\n  var pts = tempArray(); // new Point[points * 3 + 1];\n\n  pts[0] = star[0];\n\n  for (var i = 1, count = 1; i < star.length; i += 2, count += 3) {\n    pts[count] = star[i];\n    pts[count + 1] = star[i];\n    pts[count + 2] = star[i + 1];\n  }\n\n  freeArray(star);\n  return pts;\n}\n\n;\n/**\r\n* @ignore\r\n* This allocates a temporary Array that should be freeArray()'ed by the caller.\r\n* @param {number} points\r\n* @return {Array}\r\n*/\n\nfunction createStar(points) {\n  // First, create a regular polygon\n  var polygon = createPolygon(points); // Calculate the points inbetween\n\n  var pts = tempArray(); // new Point[points * 2 + 1];\n\n  var half = Math.floor(polygon.length / 2);\n  var count = polygon.length - 1;\n  var offset = points % 2 === 0 ? 2 : 1;\n\n  for (var i = 0; i < count; i++) {\n    // Get the intersection of two lines\n    var p0 = polygon[i];\n    var p1 = polygon[i + 1];\n    var q21 = polygon[(half + i - 1) % count];\n    var q2off = polygon[(half + i + offset) % count];\n    pts[i * 2] = p0;\n    pts[i * 2 + 1] = getIntersection(p0.x, p0.y, q21.x, q21.y, p1.x, p1.y, q2off.x, q2off.y, new go.Point()); // ?? not currently managed\n  }\n\n  pts[pts.length] = pts[0];\n  freeArray(polygon);\n  return pts;\n}\n\n;\ngo.Shape.defineFigureGenerator(\"Pentagon\", function (shape, w, h) {\n  var points = createPolygon(5);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 5; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\n  freeArray(points);\n  geo.spot1 = new go.Spot(.2, .22);\n  geo.spot2 = new go.Spot(.8, .9);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Hexagon\", function (shape, w, h) {\n  var points = createPolygon(6);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 6; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\n  freeArray(points);\n  geo.spot1 = new go.Spot(.07, .25);\n  geo.spot2 = new go.Spot(.93, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Heptagon\", function (shape, w, h) {\n  var points = createPolygon(7);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 7; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\n  freeArray(points);\n  geo.spot1 = new go.Spot(.2, .15);\n  geo.spot2 = new go.Spot(.8, .85);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Octagon\", function (shape, w, h) {\n  var points = createPolygon(8);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 8; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\n  freeArray(points);\n  geo.spot1 = new go.Spot(.15, .15);\n  geo.spot2 = new go.Spot(.85, .85);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Nonagon\", function (shape, w, h) {\n  var points = createPolygon(9);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 9; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\n  freeArray(points);\n  geo.spot1 = new go.Spot(.17, .13);\n  geo.spot2 = new go.Spot(.82, .82);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Decagon\", function (shape, w, h) {\n  var points = createPolygon(10);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 10; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\n  freeArray(points);\n  geo.spot1 = new go.Spot(.16, .16);\n  geo.spot2 = new go.Spot(.84, .84);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Dodecagon\", function (shape, w, h) {\n  var points = createPolygon(12);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 12; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\n  freeArray(points);\n  geo.spot1 = new go.Spot(.16, .16);\n  geo.spot2 = new go.Spot(.84, .84);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"FivePointedStar\", function (shape, w, h) {\n  var starPoints = createStar(5);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 10; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\n  freeArray(starPoints);\n  geo.spot1 = new go.Spot(.266, .333);\n  geo.spot2 = new go.Spot(.733, .733);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"SixPointedStar\", function (shape, w, h) {\n  var starPoints = createStar(6);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 12; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\n  freeArray(starPoints);\n  geo.spot1 = new go.Spot(.17, .25);\n  geo.spot2 = new go.Spot(.83, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"SevenPointedStar\", function (shape, w, h) {\n  var starPoints = createStar(7);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 14; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\n  freeArray(starPoints);\n  geo.spot1 = new go.Spot(.222, .277);\n  geo.spot2 = new go.Spot(.777, .666);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"EightPointedStar\", function (shape, w, h) {\n  var starPoints = createStar(8);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 16; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\n  freeArray(starPoints);\n  geo.spot1 = new go.Spot(.25, .25);\n  geo.spot2 = new go.Spot(.75, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"NinePointedStar\", function (shape, w, h) {\n  var starPoints = createStar(9);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 18; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\n  freeArray(starPoints);\n  geo.spot1 = new go.Spot(.222, .277);\n  geo.spot2 = new go.Spot(.777, .666);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"TenPointedStar\", function (shape, w, h) {\n  var starPoints = createStar(10);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < 20; i++) {\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\n  }\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\n  freeArray(starPoints);\n  geo.spot1 = new go.Spot(.281, .261);\n  geo.spot2 = new go.Spot(.723, .748);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"FivePointedBurst\", function (shape, w, h) {\n  var burstPoints = createBurst(5);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < burstPoints.length; i += 3) {\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w, burstPoints[i + 2].y * h, burstPoints[i].x * w, burstPoints[i].y * h, burstPoints[i + 1].x * w, burstPoints[i + 1].y * h));\n  }\n\n  fig.segments.last().close();\n  freeArray(burstPoints);\n  geo.spot1 = new go.Spot(.222, .277);\n  geo.spot2 = new go.Spot(.777, .777);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"SixPointedBurst\", function (shape, w, h) {\n  var burstPoints = createBurst(6);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < burstPoints.length; i += 3) {\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w, burstPoints[i + 2].y * h, burstPoints[i].x * w, burstPoints[i].y * h, burstPoints[i + 1].x * w, burstPoints[i + 1].y * h));\n  }\n\n  fig.segments.last().close();\n  freeArray(burstPoints);\n  geo.spot1 = new go.Spot(.170, .222);\n  geo.spot2 = new go.Spot(.833, .777);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"SevenPointedBurst\", function (shape, w, h) {\n  var burstPoints = createBurst(7);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < burstPoints.length; i += 3) {\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w, burstPoints[i + 2].y * h, burstPoints[i].x * w, burstPoints[i].y * h, burstPoints[i + 1].x * w, burstPoints[i + 1].y * h));\n  }\n\n  fig.segments.last().close();\n  freeArray(burstPoints);\n  geo.spot1 = new go.Spot(.222, .222);\n  geo.spot2 = new go.Spot(.777, .777);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"EightPointedBurst\", function (shape, w, h) {\n  var burstPoints = createBurst(8);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < burstPoints.length; i += 3) {\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w, burstPoints[i + 2].y * h, burstPoints[i].x * w, burstPoints[i].y * h, burstPoints[i + 1].x * w, burstPoints[i + 1].y * h));\n  }\n\n  fig.segments.last().close();\n  freeArray(burstPoints);\n  geo.spot1 = new go.Spot(.222, .222);\n  geo.spot2 = new go.Spot(.777, .777);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"NinePointedBurst\", function (shape, w, h) {\n  var burstPoints = createBurst(9);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < burstPoints.length; i += 3) {\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w, burstPoints[i + 2].y * h, burstPoints[i].x * w, burstPoints[i].y * h, burstPoints[i + 1].x * w, burstPoints[i + 1].y * h));\n  }\n\n  fig.segments.last().close();\n  freeArray(burstPoints);\n  geo.spot1 = new go.Spot(.222, .222);\n  geo.spot2 = new go.Spot(.777, .777);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"TenPointedBurst\", function (shape, w, h) {\n  var burstPoints = createBurst(10);\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\n  geo.add(fig);\n\n  for (var i = 1; i < burstPoints.length; i += 3) {\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w, burstPoints[i + 2].y * h, burstPoints[i].x * w, burstPoints[i].y * h, burstPoints[i + 1].x * w, burstPoints[i + 1].y * h));\n  }\n\n  fig.segments.last().close();\n  freeArray(burstPoints);\n  geo.spot1 = new go.Spot(.222, .222);\n  geo.spot2 = new go.Spot(.777, .777);\n  return geo;\n});\ngo.Shape.setFigureParameter(\"FramedRectangle\", 0, new FigureParameter(\"ThicknessX\", 8));\ngo.Shape.setFigureParameter(\"FramedRectangle\", 1, new FigureParameter(\"ThicknessY\", 8));\ngo.Shape.defineFigureGenerator(\"FramedRectangle\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  var param2 = shape ? shape.parameter2 : NaN;\n  if (isNaN(param1)) param1 = 8; // default values PARAMETER 1 is for WIDTH\n\n  if (isNaN(param2)) param2 = 8; // default values PARAMETER 2 is for HEIGHT\n\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig); // outer rectangle, clockwise\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n\n  if (param1 < w / 2 && param2 < h / 2) {\n    // inner rectangle, counter-clockwise\n    fig.add(new go.PathSegment(go.PathSegment.Move, param1, param2)); // subpath\n\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1, h - param2));\n    fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, h - param2));\n    fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, param2).close());\n  }\n\n  geo.setSpots(0, 0, 1, 1, param1, param2, -param1, -param2);\n  return geo;\n});\ngo.Shape.setFigureParameter(\"Ring\", 0, new FigureParameter(\"Thickness\", 8));\ngo.Shape.defineFigureGenerator(\"Ring\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < 0) param1 = 8;\n  var rad = w / 2;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, w / 2, true); // clockwise\n\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close());\n  var rad2 = Math.max(rad - param1, 0);\n\n  if (rad2 > 0) {\n    // counter-clockwise\n    fig.add(new go.PathSegment(go.PathSegment.Move, w / 2 + rad2, w / 2));\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 0, -360, rad, rad, rad2, rad2).close());\n  }\n\n  geo.spot1 = GeneratorEllipseSpot1;\n  geo.spot2 = GeneratorEllipseSpot2;\n  geo.defaultStretch = go.GraphObject.Uniform;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cloud\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(.08034461 * w, .1944299 * h, true).add(new go.PathSegment(go.PathSegment.Bezier, .2008615 * w, .05349299 * h, -.09239631 * w, .07836421 * h, .1406031 * w, -.0542823 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .4338609 * w, .074219 * h, .2450511 * w, -.00697547 * h, .3776197 * w, -.01112067 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .6558228 * w, .07004196 * h, .4539471 * w, 0, .6066018 * w, -.02526587 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .8921095 * w, .08370865 * h, .6914277 * w, -.01904177 * h, .8921095 * w, -.01220843 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .9147671 * w, .3194596 * h, 1.036446 * w, .04105738 * h, 1.020377 * w, .3022052 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .9082935 * w, .562044 * h, 1.04448 * w, .360238 * h, .992256 * w, .5219009 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .9212406 * w, .8217117 * h, 1.032337 * w, .5771781 * h, 1.018411 * w, .8120651 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .7592566 * w, .9156953 * h, 1.028411 * w, .9571472 * h, .8556702 * w, 1.052487 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .5101666 * w, .9310455 * h, .7431877 * w, 1.009325 * h, .5624123 * w, 1.021761 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .2609328 * w, .9344623 * h, .4820677 * w, 1.031761 * h, .3030112 * w, 1.002796 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .08034461 * w, .870098 * h, .2329994 * w, 1.01518 * h, .03213784 * w, 1.01518 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .06829292 * w, .6545475 * h, -.02812061 * w, .9032597 * h, -.01205169 * w, .6835638 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .06427569 * w, .4265613 * h, -.01812061 * w, .6089503 * h, -.00606892 * w, .4555777 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .08034461 * w, .1944299 * h, -.01606892 * w, .3892545 * h, -.01205169 * w, .1944299 * h))).setSpots(.1, .1, .9, .9);\n});\ngo.Shape.defineFigureGenerator(\"StopSign\", function (shape, w, h) {\n  var part = 1 / (Math.SQRT2 + 2);\n  return new go.Geometry().add(new go.PathFigure(part * w, 0, true).add(new go.PathSegment(go.PathSegment.Line, (1 - part) * w, 0)).add(new go.PathSegment(go.PathSegment.Line, w, part * h)).add(new go.PathSegment(go.PathSegment.Line, w, (1 - part) * h)).add(new go.PathSegment(go.PathSegment.Line, (1 - part) * w, h)).add(new go.PathSegment(go.PathSegment.Line, part * w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, (1 - part) * h)).add(new go.PathSegment(go.PathSegment.Line, 0, part * h).close())).setSpots(part / 2, part / 2, 1 - part / 2, 1 - part / 2);\n});\ngo.Shape.setFigureParameter(\"Pie\", 0, new FigureParameter(\"Start\", 0, -360, 360));\ngo.Shape.setFigureParameter(\"Pie\", 1, new FigureParameter(\"Sweep\", 315, -360, 360));\ngo.Shape.defineFigureGenerator(\"Pie\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  var param2 = shape ? shape.parameter2 : NaN;\n  if (isNaN(param1)) param1 = 0; // default values PARAMETER 1 is for Start Angle\n\n  if (isNaN(param2)) param2 = 315; // default values PARAMETER 2 is for Sweep Angle\n\n  var start = param1 % 360;\n  if (start < 0) start += 360;\n  var sweep = param2 % 360;\n  var rad = Math.min(w, h) / 2;\n  return new go.Geometry().add(new go.PathFigure(rad, rad) // start point\n  .add(new go.PathSegment(go.PathSegment.Arc, start, sweep, // angles\n  rad, rad, // center\n  rad, rad) // radius\n  .close()));\n});\ngo.Shape.defineFigureGenerator(\"PiePiece\", function (shape, w, h) {\n  var factor = KAPPA / Math.SQRT2 * .5;\n  var x1 = Math.SQRT2 / 2;\n  var y1 = 1 - Math.SQRT2 / 2;\n  return new go.Geometry().add(new go.PathFigure(w, h, true).add(new go.PathSegment(go.PathSegment.Bezier, x1 * w, y1 * h, w, (1 - factor) * h, (x1 + factor) * w, (y1 + factor) * h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\n});\ngo.Shape.setFigureParameter(\"ThickCross\", 0, new FigureParameter(\"Thickness\", 30));\ngo.Shape.defineFigureGenerator(\"ThickCross\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < 0) param1 = 30;\n  var t = Math.min(param1, w) / 2;\n  var mx = w / 2;\n  var my = h / 2;\n  return new go.Geometry().add(new go.PathFigure(mx - t, 0, true).add(new go.PathSegment(go.PathSegment.Line, mx + t, 0)).add(new go.PathSegment(go.PathSegment.Line, mx + t, my - t)).add(new go.PathSegment(go.PathSegment.Line, w, my - t)).add(new go.PathSegment(go.PathSegment.Line, w, my + t)).add(new go.PathSegment(go.PathSegment.Line, mx + t, my + t)).add(new go.PathSegment(go.PathSegment.Line, mx + t, h)).add(new go.PathSegment(go.PathSegment.Line, mx - t, h)).add(new go.PathSegment(go.PathSegment.Line, mx - t, my + t)).add(new go.PathSegment(go.PathSegment.Line, 0, my + t)).add(new go.PathSegment(go.PathSegment.Line, 0, my - t)).add(new go.PathSegment(go.PathSegment.Line, mx - t, my - t).close()));\n});\ngo.Shape.setFigureParameter(\"ThinCross\", 0, new FigureParameter(\"Thickness\", 10));\ngo.Shape.defineFigureGenerator(\"ThinCross\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < 0) param1 = 10;\n  var t = Math.min(param1, w) / 2;\n  var mx = w / 2;\n  var my = h / 2;\n  return new go.Geometry().add(new go.PathFigure(mx - t, 0, true).add(new go.PathSegment(go.PathSegment.Line, mx + t, 0)).add(new go.PathSegment(go.PathSegment.Line, mx + t, my - t)).add(new go.PathSegment(go.PathSegment.Line, w, my - t)).add(new go.PathSegment(go.PathSegment.Line, w, my + t)).add(new go.PathSegment(go.PathSegment.Line, mx + t, my + t)).add(new go.PathSegment(go.PathSegment.Line, mx + t, h)).add(new go.PathSegment(go.PathSegment.Line, mx - t, h)).add(new go.PathSegment(go.PathSegment.Line, mx - t, my + t)).add(new go.PathSegment(go.PathSegment.Line, 0, my + t)).add(new go.PathSegment(go.PathSegment.Line, 0, my - t)).add(new go.PathSegment(go.PathSegment.Line, mx - t, my - t).close()));\n});\ngo.Shape.setFigureParameter(\"ThickX\", 0, new FigureParameter(\"Thickness\", 30));\ngo.Shape.defineFigureGenerator(\"ThickX\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < 0) param1 = 30;\n\n  if (w === 0 || h === 0) {\n    var geo = new go.Geometry(go.Geometry.Rectangle);\n    geo.startX = 0;\n    geo.startY = 0;\n    geo.endX = w;\n    geo.endY = h;\n    return geo;\n  } else {\n    var w2 = w / 2;\n    var h2 = h / 2;\n    var a2 = Math.atan2(h, w);\n    var dx = param1 - Math.min(Math.cos(a2) * param1 / 2, w2);\n    var dy = param1 - Math.min(Math.sin(a2) * param1 / 2, h2);\n    var geo = new go.Geometry();\n    var fig = new go.PathFigure(dx, 0, true);\n    geo.add(fig);\n    fig.add(new go.PathSegment(go.PathSegment.Line, w2, .2 * h));\n    fig.add(new go.PathSegment(go.PathSegment.Line, w - dx, 0));\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, dy));\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, h2));\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h - dy));\n    fig.add(new go.PathSegment(go.PathSegment.Line, w - dx, h));\n    fig.add(new go.PathSegment(go.PathSegment.Line, w2, .8 * h));\n    fig.add(new go.PathSegment(go.PathSegment.Line, dx, h));\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h - dy));\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h2));\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, dy).close());\n    return geo;\n  }\n});\ngo.Shape.setFigureParameter(\"ThinX\", 0, new FigureParameter(\"Thickness\", 10));\ngo.Shape.defineFigureGenerator(\"ThinX\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < 0) param1 = 10;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.1 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .6 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .4 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .1 * h).close());\n  return geo;\n});\ngo.Shape.setFigureParameter(\"SquareIBeam\", 0, new FigureParameter(\"BeamWidth\", 0.2, 0.1, 0.9));\ngo.Shape.defineFigureGenerator(\"SquareIBeam\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // width of the ibeam in % of the total width\n\n  if (isNaN(param1)) param1 = .2;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, param1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (.5 + param1 / 2) * w, param1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (.5 + param1 / 2) * w, (1 - param1) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, (1 - param1) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, (1 - param1) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (.5 - param1 / 2) * w, (1 - param1) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (.5 - param1 / 2) * w, param1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1 * h).close());\n  return geo;\n});\ngo.Shape.setFigureParameter(\"RoundedIBeam\", 0, new FigureParameter(\"Curviness\", .5, .05, .65));\ngo.Shape.defineFigureGenerator(\"RoundedIBeam\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // curviness of the ibeam relative to total width\n\n  if (isNaN(param1)) param1 = .5;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, h, Math.abs(1 - param1) * w, .25 * h, Math.abs(1 - param1) * w, .75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, param1 * w, .75 * h, param1 * w, .25 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"HalfEllipse\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, true).add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, KAPPA * w, 0, w, (.5 - KAPPA / 2) * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0, h, w, (.5 + KAPPA / 2) * h, KAPPA * w, h).close())).setSpots(0, 0.156, 0.844, 0.844);\n});\ngo.Shape.defineFigureGenerator(\"Crescent\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, true).add(new go.PathSegment(go.PathSegment.Bezier, 0, h, w, 0, w, h)).add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, 0.5 * w, 0.75 * h, 0.5 * w, 0.25 * h).close())).setSpots(.311, 0.266, 0.744, 0.744);\n});\ngo.Shape.defineFigureGenerator(\"Heart\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(.5 * w, h, true).add(new go.PathSegment(go.PathSegment.Bezier, 0, .3 * h, .1 * w, .8 * h, 0, .5 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .3 * h, 0, 0, .45 * w, 0)).add(new go.PathSegment(go.PathSegment.Bezier, w, .3 * h, .55 * w, 0, w, 0)).add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, .5 * h, .9 * w, .8 * h).close())).setSpots(.14, .29, .86, .78);\n});\ngo.Shape.defineFigureGenerator(\"Spade\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(.5 * w, 0, true).add(new go.PathSegment(go.PathSegment.Line, .51 * w, .01 * h)).add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, .6 * w, .2 * h, w, .25 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .55 * w, .7 * h, w, .8 * h, .6 * w, .8 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .75 * w, h, .5 * w, .75 * h, .55 * w, .95 * h)).add(new go.PathSegment(go.PathSegment.Line, .25 * w, h)).add(new go.PathSegment(go.PathSegment.Bezier, .45 * w, .7 * h, .45 * w, .95 * h, .5 * w, .75 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0, .5 * h, .4 * w, .8 * h, 0, .8 * h)).add(new go.PathSegment(go.PathSegment.Bezier, .49 * w, .01 * h, 0, .25 * h, .4 * w, .2 * h).close())).setSpots(.14, .26, .86, .78);\n});\ngo.Shape.defineFigureGenerator(\"Club\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.4 * w, .6 * h, true);\n  geo.add(fig); // Start the base\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .15 * w, h, .5 * w, .75 * h, .45 * w, .95 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .85 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .6 * w, .6 * h, .55 * w, .95 * h, .5 * w, .75 * h)); // First circle:\n\n  var r = .2; // radius\n\n  var cx = .3; // offset from Center x\n\n  var cy = 0; // offset from Center y\n\n  var d = r * KAPPA;\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 + r + cy) * h, (.5 - r + cx) * w, (.5 + d + cy) * h, (.5 - d + cx) * w, (.5 + r + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .5 + r + cx) * w, (.5 + cy) * h, (.5 + d + cx) * w, (.5 + r + cy) * h, (.5 + r + cx) * w, (.5 + d + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h, (1 - .5 + r + cx) * w, (.5 - d + cy) * h, (.5 + d + cx) * w, (.5 - r + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .65 * w, 0.36771243 * h, (.5 - d + cx) * w, (.5 - r + cy) * h, (.5 - r + cx + .05) * w, (.5 - d + cy - .02) * h));\n  r = .2; // radius\n\n  cx = 0; // offset from Center x\n\n  cy = -.3; // offset from Center y\n\n  d = r * KAPPA;\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .5 + r + cx) * w, (.5 + cy) * h, (.5 + d + cx) * w, (.5 + r + cy) * h, (.5 + r + cx) * w, (.5 + d + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h, (1 - .5 + r + cx) * w, (.5 - d + cy) * h, (.5 + d + cx) * w, (.5 - r + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h, (.5 - d + cx) * w, (.5 - r + cy) * h, (.5 - r + cx) * w, (.5 - d + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - d + cx) * w, (.5 + r + cy) * h, (.5 - r + cx) * w, (.5 + d + cy) * h, (.5 - d + cx) * w, (.5 + r + cy) * h));\n  r = .2; // radius\n\n  cx = -.3; // offset from Center x\n\n  cy = 0; // offset from Center y\n\n  d = r * KAPPA;\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h, (1 - .5 + r + cx - .05) * w, (.5 - d + cy - .02) * h, (.5 + d + cx) * w, (.5 - r + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h, (.5 - d + cx) * w, (.5 - r + cy) * h, (.5 - r + cx) * w, (.5 - d + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 + r + cy) * h, (.5 - r + cx) * w, (.5 + d + cy) * h, (.5 - d + cx) * w, (.5 + r + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .4 * w, .6 * h, (.5 + d + cx) * w, (.5 + r + cy) * h, (.5 + r + cx) * w, (.5 + d + cy) * h).close());\n  geo.setSpots(.06, .33, .93, .68);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"YinYang\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * 0.5, 0, true);\n  geo.add(fig); // Right semi-circle\n\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 180, w * 0.5, w * 0.5, w * 0.5, w * 0.5)); // bottom semi-circle\n\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 90, -180, w * 0.5, w * 0.75, w * 0.25, w * 0.25)); // top semi-circle\n\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 90, 180, w * 0.5, w * 0.25, w * 0.25, w * 0.25));\n  var radius = .1; // of the small circles\n\n  var centerx = .5;\n  var centery = .25; // Top small circle, goes counter-clockwise\n\n  fig.add(new go.PathSegment(go.PathSegment.Move, (centerx + radius) * w, centery * h));\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 0, -360, w * centerx, h * centery, radius * w, radius * w).close()); // Right semi-circle\n  // Left semi-circle\n\n  fig = new go.PathFigure(w * 0.5, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 270, -180, w * 0.5, w * 0.5, w * 0.5, w * 0.5));\n  centery = .75; // Bottom small circle\n\n  fig = new go.PathFigure((centerx + radius) * w, centery * h, true); // Not a subpath\n\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 0, 360, w * centerx, h * centery, radius * w, radius * w).close()); // Right semi-circle\n\n  geo.defaultStretch = go.GraphObject.Uniform;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Peace\", function (shape, w, h) {\n  var a = 1.0 - 0.1464466094067262; // at 45 degrees\n\n  var w2 = 0.5 * w;\n  var h2 = 0.5 * h;\n  return new go.Geometry().add(new go.PathFigure(w2, 0, false).add(new go.PathSegment(go.PathSegment.Arc, 270, 360, w2, h2, w2, h2)).add(new go.PathSegment(go.PathSegment.Line, w2, h)).add(new go.PathSegment(go.PathSegment.Move, w2, h2)).add(new go.PathSegment(go.PathSegment.Line, (1.0 - a) * w, a * h)).add(new go.PathSegment(go.PathSegment.Move, w2, h2)).add(new go.PathSegment(go.PathSegment.Line, a * w, a * h)));\n});\ngo.Shape.defineFigureGenerator(\"NotAllowed\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .5;\n  var radius = .5;\n  var centerx = .5;\n  var centery = .5;\n  var fig = new go.PathFigure(centerx * w, (centery - radius) * h);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h, (centerx - cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h, (centerx + cpOffset) * w, (centery - radius) * h)); // Inner circle, composed of two parts, separated by\n  // a beam across going from top-right to bottom-left.\n\n  radius = .40;\n  cpOffset = KAPPA * .40; // First we cut up the top right 90 degree curve into two smaller\n  // curves.\n  // Since its clockwise, StartOfArrow is the first of the two points\n  // on the circle. EndOfArrow is the other one.\n\n  var startOfArrowc1 = tempPoint();\n  var startOfArrowc2 = tempPoint();\n  var startOfArrow = tempPoint();\n  var unused = tempPoint();\n  breakUpBezier(centerx, centery - radius, centerx + cpOffset, centery - radius, centerx + radius, centery - cpOffset, centerx + radius, centery, .42, startOfArrowc1, startOfArrowc2, startOfArrow, unused, unused);\n  var endOfArrowc1 = tempPoint();\n  var endOfArrowc2 = tempPoint();\n  var endOfArrow = tempPoint();\n  breakUpBezier(centerx, centery - radius, centerx + cpOffset, centery - radius, centerx + radius, centery - cpOffset, centerx + radius, centery, .58, unused, unused, endOfArrow, endOfArrowc1, endOfArrowc2); // Cut up the bottom left 90 degree curve into two smaller curves.\n\n  var startOfArrow2c1 = tempPoint();\n  var startOfArrow2c2 = tempPoint();\n  var startOfArrow2 = tempPoint();\n  breakUpBezier(centerx, centery + radius, centerx - cpOffset, centery + radius, centerx - radius, centery + cpOffset, centerx - radius, centery, .42, startOfArrow2c1, startOfArrow2c2, startOfArrow2, unused, unused);\n  var endOfArrow2c1 = tempPoint();\n  var endOfArrow2c2 = tempPoint();\n  var endOfArrow2 = tempPoint();\n  breakUpBezier(centerx, centery + radius, centerx - cpOffset, centery + radius, centerx - radius, centery + cpOffset, centerx - radius, centery, .58, unused, unused, endOfArrow2, endOfArrow2c1, endOfArrow2c2);\n  fig.add(new go.PathSegment(go.PathSegment.Move, endOfArrow2.x * w, endOfArrow2.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, endOfArrow2c1.x * w, endOfArrow2c1.y * h, endOfArrow2c2.x * w, endOfArrow2c2.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, startOfArrow.x * w, startOfArrow.y * h, startOfArrowc1.x * w, startOfArrowc1.y * h, startOfArrowc2.x * w, startOfArrowc2.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, endOfArrow2.x * w, endOfArrow2.y * h).close());\n  fig.add(new go.PathSegment(go.PathSegment.Move, startOfArrow2.x * w, startOfArrow2.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, endOfArrow.x * w, endOfArrow.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, endOfArrowc1.x * w, endOfArrowc1.y * h, endOfArrowc2.x * w, endOfArrowc2.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, startOfArrow2.x * w, startOfArrow2.y * h, startOfArrow2c1.x * w, startOfArrow2c1.y * h, startOfArrow2c2.x * w, startOfArrow2c2.y * h).close());\n  freePoint(startOfArrowc1);\n  freePoint(startOfArrowc2);\n  freePoint(startOfArrow);\n  freePoint(unused);\n  freePoint(endOfArrowc1);\n  freePoint(endOfArrowc2);\n  freePoint(endOfArrow);\n  freePoint(startOfArrow2c1);\n  freePoint(startOfArrow2c2);\n  freePoint(startOfArrow2);\n  freePoint(endOfArrow2c1);\n  freePoint(endOfArrow2c2);\n  freePoint(endOfArrow2);\n  geo.defaultStretch = go.GraphObject.Uniform;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Fragile\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, true).add(new go.PathSegment(go.PathSegment.Line, .25 * w, 0)).add(new go.PathSegment(go.PathSegment.Line, .2 * w, .15 * h)).add(new go.PathSegment(go.PathSegment.Line, .3 * w, .25 * h)).add(new go.PathSegment(go.PathSegment.Line, .29 * w, .33 * h)).add(new go.PathSegment(go.PathSegment.Line, .35 * w, .25 * h)).add(new go.PathSegment(go.PathSegment.Line, .3 * w, .15 * h)).add(new go.PathSegment(go.PathSegment.Line, .4 * w, 0)).add(new go.PathSegment(go.PathSegment.Line, w, 0)) // Left Side\n  .add(new go.PathSegment(go.PathSegment.Bezier, .55 * w, .5 * h, w, .25 * h, .75 * w, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, .55 * w, .9 * h)) // The base\n  .add(new go.PathSegment(go.PathSegment.Line, .7 * w, .9 * h)).add(new go.PathSegment(go.PathSegment.Line, .7 * w, h)).add(new go.PathSegment(go.PathSegment.Line, .3 * w, h)).add(new go.PathSegment(go.PathSegment.Line, .3 * w, .9 * h)) // Right side\n  .add(new go.PathSegment(go.PathSegment.Line, .45 * w, .9 * h)).add(new go.PathSegment(go.PathSegment.Line, .45 * w, .5 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, .25 * w, .5 * h, 0, .25 * h).close()));\n});\ngo.Shape.setFigureParameter(\"HourGlass\", 0, new FigureParameter(\"Thickness\", 30));\ngo.Shape.defineFigureGenerator(\"HourGlass\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // width at middle of hourglass\n\n  if (isNaN(param1) || param1 < 0) param1 = 30;\n  if (param1 > w) param1 = w;\n  var x1 = (w - param1) / 2;\n  var x2 = x1 + param1;\n  return new go.Geometry().add(new go.PathFigure(x2, 0.5 * h).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h)).add(new go.PathSegment(go.PathSegment.Line, x1, 0.5 * h)).add(new go.PathSegment(go.PathSegment.Line, 0, 0)).add(new go.PathSegment(go.PathSegment.Line, w, 0).close()));\n});\ngo.Shape.defineFigureGenerator(\"Lightning\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0.55 * h).add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0)).add(new go.PathSegment(go.PathSegment.Line, 0.3 * w, 0.45 * h)).add(new go.PathSegment(go.PathSegment.Line, w, 0.45 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, h)).add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.55 * h).close()));\n});\ngo.Shape.defineFigureGenerator(\"GenderMale\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .4;\n  var radius = .4;\n  var centerx = .5;\n  var centery = .5;\n  var unused = tempPoint();\n  var mid = tempPoint();\n  var c1 = tempPoint();\n  var c2 = tempPoint();\n  var fig = new go.PathFigure((centerx - radius) * w, centery * h, false);\n  geo.add(fig); // Outer circle\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  breakUpBezier(centerx, centery - radius, centerx + cpOffset, centery - radius, centerx + radius, centery - cpOffset, centerx + radius, centery, .44, c1, c2, mid, unused, unused);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, mid.x * w, mid.y * h, c1.x * w, c1.y * h, c2.x * w, c2.y * h));\n  var startOfArrow = tempPointAt(mid.x, mid.y);\n  breakUpBezier(centerx, centery - radius, centerx + cpOffset, centery - radius, centerx + radius, centery - cpOffset, centerx + radius, centery, .56, unused, unused, mid, c1, c2);\n  var endOfArrow = tempPointAt(mid.x, mid.y);\n  fig.add(new go.PathSegment(go.PathSegment.Line, (startOfArrow.x * .1 + .95 * .9) * w, startOfArrow.y * .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .85 * w, startOfArrow.y * .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .85 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .15 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (endOfArrow.x * .1 + .9) * w, .15 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (endOfArrow.x * .1 + .9) * w, (endOfArrow.y * .1 + .05 * .9) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, endOfArrow.x * w, endOfArrow.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, c1.x * w, c1.y * h, c2.x * w, c2.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h)); // Inner circle\n\n  radius = .35;\n  cpOffset = KAPPA * .35;\n  var fig2 = new go.PathFigure(centerx * w, (centery - radius) * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h, (centerx - cpOffset) * w, (centery + radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h, (centerx + cpOffset) * w, (centery - radius) * h));\n  var fig3 = new go.PathFigure((centerx - radius) * w, centery * h, false);\n  geo.add(fig3);\n  freePoint(unused);\n  freePoint(mid);\n  freePoint(c1);\n  freePoint(c2);\n  freePoint(startOfArrow);\n  freePoint(endOfArrow);\n  geo.spot1 = new go.Spot(.202, .257);\n  geo.spot2 = new go.Spot(.792, .739);\n  geo.defaultStretch = go.GraphObject.Uniform;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"GenderFemale\", function (shape, w, h) {\n  var geo = new go.Geometry(); // Outer Circle\n\n  var r = .375; // radius\n\n  var cx = 0; // offset from Center x\n\n  var cy = -.125; // offset from Center y\n\n  var d = r * KAPPA;\n  var fig = new go.PathFigure((.525 + cx) * w, (.5 + r + cy) * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .5 + r + cx) * w, (.5 + cy) * h, (.5 + d + cx) * w, (.5 + r + cy) * h, (.5 + r + cx) * w, (.5 + d + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h, (1 - .5 + r + cx) * w, (.5 - d + cy) * h, (.5 + d + cx) * w, (.5 - r + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h, (.5 - d + cx) * w, (.5 - r + cy) * h, (.5 - r + cx) * w, (.5 - d + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.475 + cx) * w, (.5 + r + cy) * h, (.5 - r + cx) * w, (.5 + d + cy) * h, (.5 - d + cx) * w, (.5 + r + cy) * h)); // Legs\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, .475 * w, .85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .425 * w, .85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .425 * w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .475 * w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .475 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .525 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .525 * w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .575 * w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .575 * w, .85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .525 * w, .85 * h).close()); // Inner circle\n\n  r = .325; // radius\n\n  cx = 0; // offset from Center x\n\n  cy = -.125; // offset from Center y\n\n  d = r * KAPPA;\n  var fig = new go.PathFigure((1 - .5 + r + cx) * w, (.5 + cy) * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 + r + cy) * h, (.5 + r + cx) * w, (.5 + d + cy) * h, (.5 + d + cx) * w, (.5 + r + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h, (.5 - d + cx) * w, (.5 + r + cy) * h, (.5 - r + cx) * w, (.5 + d + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h, (.5 - r + cx) * w, (.5 - d + cy) * h, (.5 - d + cx) * w, (.5 - r + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .5 + r + cx) * w, (.5 + cy) * h, (.5 + d + cx) * w, (.5 - r + cy) * h, (1 - .5 + r + cx) * w, (.5 - d + cy) * h));\n  var fig = new go.PathFigure((.525 + cx) * w, (.5 + r + cy) * h, false);\n  geo.add(fig);\n  geo.spot1 = new go.Spot(.232, .136);\n  geo.spot2 = new go.Spot(.682, .611);\n  geo.defaultStretch = go.GraphObject.Uniform;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"LogicImplies\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .2; // Distance the arrow folds from the right\n\n  return new go.Geometry().add(new go.PathFigure((1 - param1) * w, 0, false).add(new go.PathSegment(go.PathSegment.Line, w, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, h)).add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, w, .5 * h))).setSpots(0, 0, 0.8, 0.5);\n});\ngo.Shape.defineFigureGenerator(\"LogicIff\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .2; // Distance the arrow folds from the right\n\n  return new go.Geometry().add(new go.PathFigure((1 - param1) * w, 0, false).add(new go.PathSegment(go.PathSegment.Line, w, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, h)).add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, w, .5 * h)).add(new go.PathSegment(go.PathSegment.Move, param1 * w, 0)).add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, param1 * w, h))).setSpots(0.2, 0, 0.8, 0.5);\n});\ngo.Shape.defineFigureGenerator(\"LogicNot\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, false).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h)));\n});\ngo.Shape.defineFigureGenerator(\"LogicAnd\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, h, false).add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h))).setSpots(0.25, 0.5, 0.75, 1);\n});\ngo.Shape.defineFigureGenerator(\"LogicOr\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, false).add(new go.PathSegment(go.PathSegment.Line, .5 * w, h)).add(new go.PathSegment(go.PathSegment.Line, w, 0))).setSpots(0.219, 0, 0.78, 0.409);\n});\ngo.Shape.defineFigureGenerator(\"LogicXor\", function (shape, w, h) {\n  var geo = new go.Geometry().add(new go.PathFigure(.5 * w, 0, false).add(new go.PathSegment(go.PathSegment.Line, .5 * w, h)).add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, w, .5 * h)).add(new go.PathSegment(go.PathSegment.Arc, 0, 360, .5 * w, .5 * h, .5 * w, .5 * h)));\n  geo.defaultStretch = go.GraphObject.Uniform;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"LogicTruth\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, false).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Move, .5 * w, 0)).add(new go.PathSegment(go.PathSegment.Line, .5 * w, h)));\n});\ngo.Shape.defineFigureGenerator(\"LogicFalsity\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, h, false).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Move, .5 * w, h)).add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0)));\n});\ngo.Shape.defineFigureGenerator(\"LogicThereExists\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, false).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h)).add(new go.PathSegment(go.PathSegment.Move, w, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h)));\n});\ngo.Shape.defineFigureGenerator(\"LogicForAll\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, false).add(new go.PathSegment(go.PathSegment.Line, .5 * w, h)).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Move, .25 * w, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, .75 * w, .5 * h))).setSpots(0.25, 0, 0.75, 0.5);\n});\ngo.Shape.defineFigureGenerator(\"LogicIsDefinedAs\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, false).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h)).add(new go.PathSegment(go.PathSegment.Line, w, .5 * h)).add(new go.PathSegment(go.PathSegment.Move, 0, h)).add(new go.PathSegment(go.PathSegment.Line, w, h))).setSpots(0.01, 0.01, 0.99, 0.49);\n});\ngo.Shape.defineFigureGenerator(\"LogicIntersect\", function (shape, w, h) {\n  var radius = 0.5;\n  return new go.Geometry().add(new go.PathFigure(0, h, false).add(new go.PathSegment(go.PathSegment.Line, 0, radius * h)).add(new go.PathSegment(go.PathSegment.Arc, 180, 180, radius * w, radius * h, radius * w, radius * h)).add(new go.PathSegment(go.PathSegment.Line, w, h))).setSpots(0, 0.5, 1, 1);\n});\ngo.Shape.defineFigureGenerator(\"LogicUnion\", function (shape, w, h) {\n  var radius = 0.5;\n  return new go.Geometry().add(new go.PathFigure(w, 0, false).add(new go.PathSegment(go.PathSegment.Line, w, radius * h)).add(new go.PathSegment(go.PathSegment.Arc, 0, 180, radius * w, radius * h, radius * w, radius * h)).add(new go.PathSegment(go.PathSegment.Line, 0, 0))).setSpots(0, 0, 1, 0.5);\n});\ngo.Shape.setFigureParameter(\"Arrow\", 0, new FigureParameter(\"ArrowheadWidth\", .3, .01, .99));\ngo.Shape.setFigureParameter(\"Arrow\", 1, new FigureParameter(\"TailHeight\", .3, .01, .99));\ngo.Shape.defineFigureGenerator(\"Arrow\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // % width of arrowhead\n\n  if (isNaN(param1)) param1 = .3;\n  var param2 = shape ? shape.parameter2 : NaN; // % height of tail\n\n  if (isNaN(param2)) param2 = .3;\n  var x = (1 - param1) * w;\n  var y1 = (.5 - param2 / 2) * h;\n  var y2 = (.5 + param2 / 2) * h;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, y1, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2).close());\n  geo.spot1 = new go.Spot(0, y1 / h);\n  var temp = getIntersection(0, y2 / h, 1, y2 / h, x / w, 1, 1, .5, tempPoint());\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n}); // Arrow with absolutes instead of scaling\n\ngo.Shape.setFigureParameter(\"Arrow2\", 0, new FigureParameter(\"ArrowheadWidth\", 30));\ngo.Shape.setFigureParameter(\"Arrow2\", 0, new FigureParameter(\"TailHeight\", 30));\ngo.Shape.defineFigureGenerator(\"Arrow2\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // width of arrowhead\n\n  if (isNaN(param1)) param1 = 30;\n  if (param1 > w) param1 = w;\n  var param2 = shape ? shape.parameter2 : NaN; // height of tail\n\n  if (isNaN(param2)) param2 = 30;\n  param2 = Math.min(param2, h / 2);\n  var x = w - param1;\n  var y1 = (h - param2) / 2;\n  var y2 = y1 + param2;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, y1, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, x, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2).close());\n  geo.spot1 = new go.Spot(0, y1 / h);\n  var temp = getIntersection(0, y2 / h, 1, y2 / h, x / w, 1, 1, .5, tempPoint());\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Chevron\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"DoubleArrow\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0.214 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 1.0 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 1.0 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0.786 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 1.0 * h).close());\n  return geo;\n});\ngo.Shape.setFigureParameter(\"DoubleEndArrow\", 0, new FigureParameter(\"ConnecterHeight\", .3, .01, .99));\ngo.Shape.defineFigureGenerator(\"DoubleEndArrow\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // height of midsection\n\n  if (isNaN(param1)) param1 = .3;\n  var y1 = (.5 - param1 / 2) * h;\n  var y2 = (.5 + param1 / 2) * h;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0).close());\n  var temp = getIntersection(0, .5, .3, 0, 0, y1 / h, .1, y1 / h, tempPoint());\n  geo.spot1 = new go.Spot(temp.x, temp.y);\n  temp = getIntersection(.7, 1, 1, .5, 0, y2 / h, 1, y2 / h, temp);\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n}); // DoubleEndArrow with absolutes instead of scaling\n\ngo.Shape.setFigureParameter(\"DoubleEndArrow2\", 0, new FigureParameter(\"ConnecterHeight\", 40));\ngo.Shape.setFigureParameter(\"DoubleEndArrow2\", 1, new FigureParameter(\"ArrowHeight\", 100));\ngo.Shape.defineFigureGenerator(\"DoubleEndArrow2\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // height of midsection\n\n  if (isNaN(param1)) param1 = 40;\n  var param2 = shape ? shape.parameter2 : NaN; // height of arrows\n\n  if (isNaN(param2)) param2 = 100;\n  /*\r\n    y1outer\r\n      /|     |\\\r\n     / |     | \\\r\n    /  y1----   \\\r\n   /             \\\r\n   \\             /\r\n    \\  y2----   /\r\n     \\ |     | /\r\n      \\|     |/\r\n    y2outer\r\n  */\n\n  var y1 = (h - param1) / 2;\n  var y2 = y1 + param1;\n  var y1outer = (h - param2) / 2;\n  var y2outer = y1outer + param2;\n\n  if (param1 > h || param2 > h) {\n    if (param2 > param1) {\n      param1 = param1 * h / param2; // use similar ratio\n\n      y1 = (h - param1) / 2;\n      y2 = y1 + param1;\n      y1outer = 0;\n      y2outer = h;\n    } else {\n      y1 = 0;\n      y2 = h;\n      y1outer = 0;\n      y2outer = h;\n    }\n  }\n\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2outer));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y2outer));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y1outer));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1outer).close());\n  var temp = getIntersection(0, .5, .3, y1outer / h, 0, y1 / h, 1, y1 / h, tempPoint());\n  geo.spot1 = new go.Spot(temp.x, temp.y);\n  temp = getIntersection(.7, y2outer / h, 1, .5, 0, y2 / h, 1, y2 / h, temp);\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n});\ngo.Shape.setFigureParameter(\"IBeamArrow\", 0, new FigureParameter(\"ConnectorHeight\", .7, .51, .97));\ngo.Shape.defineFigureGenerator(\"IBeamArrow\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // height of midsection\n\n  if (isNaN(param1)) param1 = .3;\n  var y1 = (.5 - param1 / 2) * h;\n  var y2 = (.5 + param1 / 2) * h;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0).close());\n  geo.spot1 = new go.Spot(0, y1 / h);\n  var temp = getIntersection(.7, 1, 1, .5, 0, y2 / h, 1, y2 / h, tempPoint());\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n}); // IBeamArrow with absolutes instead of scaling\n\ngo.Shape.setFigureParameter(\"IBeamArrow2\", 0, new FigureParameter(\"ConnectorHeight\", 40));\ngo.Shape.setFigureParameter(\"IBeamArrow2\", 1, new FigureParameter(\"BeamArrowHeight\", 100));\ngo.Shape.defineFigureGenerator(\"IBeamArrow2\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // height of midsection\n\n  if (isNaN(param1)) param1 = 40;\n  var param2 = shape ? shape.parameter2 : NaN; // height of beam and arrow\n\n  if (isNaN(param2)) param2 = 100;\n  var y1 = (h - param1) / 2;\n  var y2 = y1 + param1;\n  var y1outer = (h - param2) / 2;\n  var y2outer = y1outer + param2;\n\n  if (param1 > h || param2 > h) {\n    if (param2 > param1) {\n      param1 = param1 * h / param2; // use similar ratio\n\n      y1 = (h - param1) / 2;\n      y2 = y1 + param1;\n      y1outer = 0;\n      y2outer = h;\n    } else {\n      y1 = 0;\n      y2 = h;\n      y1outer = 0;\n      y2outer = h;\n    }\n  }\n\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2outer));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y2outer));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2outer));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, y1outer));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y1outer));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1outer).close());\n  geo.spot1 = new go.Spot(0, y1 / h);\n  var temp = getIntersection(.7, y2outer / h, 1, .5, 0, y2 / h, 1, y2 / h, tempPoint());\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n});\ngo.Shape.setFigureParameter(\"Pointer\", 0, new FigureParameter(\"BackPoint\", .1, 0, .2));\ngo.Shape.defineFigureGenerator(\"Pointer\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // how much the back of the pointer comes in\n\n  if (isNaN(param1)) param1 = .1;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\n  geo.spot1 = new go.Spot(param1, .35);\n  var temp = getIntersection(.2, .65, 1, .65, 0, 1, 1, .5, tempPoint()); // ?? constant\n\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n});\ngo.Shape.setFigureParameter(\"RoundedPointer\", 0, new FigureParameter(\"RoundedEdge\", .3, 0, .5));\ngo.Shape.defineFigureGenerator(\"RoundedPointer\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // how much the curved back of the pointer comes in\n\n  if (isNaN(param1)) param1 = .3;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, param1 * w, .75 * h, param1 * w, .25 * h).close());\n  geo.spot1 = new go.Spot(param1, .35);\n  var temp = getIntersection(0, .65, 1, .65, 0, 1, 1, .5, tempPoint()); // ?? constant\n\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n});\ngo.Shape.setFigureParameter(\"SplitEndArrow\", 0, new FigureParameter(\"TailHeight\", 0.4, 0.01, .99));\ngo.Shape.defineFigureGenerator(\"SplitEndArrow\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // % height of arrow tail\n\n  if (isNaN(param1)) param1 = .4;\n  var y1 = (.5 - param1 / 2) * h;\n  var y2 = (.5 + param1 / 2) * h;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0).close());\n  geo.spot1 = new go.Spot(.2, .3);\n  var temp = getIntersection(.7, 1, 1, .5, 0, y2 / h, 1, y2 / h, tempPoint());\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n}); // SplitEndArrow with absolutes instead of scaling\n\ngo.Shape.setFigureParameter(\"SplitEndArrow2\", 0, new FigureParameter(\"TailThickness\", 50));\ngo.Shape.defineFigureGenerator(\"SplitEndArrow2\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // height of arrow tail\n\n  if (isNaN(param1)) param1 = 50;\n  var y1 = (h - param1) / 2;\n  var y2 = y1 + param1;\n\n  if (param1 > h) {\n    y1 = 0;\n    y2 = h;\n  }\n\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0).close());\n  geo.spot1 = new go.Spot(.2, y1 / h);\n  var temp = getIntersection(.7, 1, 1, .5, 0, y2 / h, 1, y2 / h, tempPoint());\n  geo.spot2 = new go.Spot(temp.x, temp.y);\n  freePoint(temp);\n  return geo;\n});\ngo.Shape.setFigureParameter(\"SquareArrow\", 0, new FigureParameter(\"ArrowPoint\", .7, .2, .9));\ngo.Shape.defineFigureGenerator(\"SquareArrow\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // pointiness of arrow, lower is more pointy\n\n  if (isNaN(param1)) param1 = .7;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, 0).close());\n  geo.spot1 = go.Spot.TopLeft;\n  geo.spot2 = new go.Spot(param1, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cone1\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpxOffset = KAPPA * .5;\n  var cpyOffset = KAPPA * .1;\n  var fig = new go.PathFigure(0, .9 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, (.9 + cpyOffset) * h, (.5 + cpxOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .9 * h, (.5 - cpxOffset) * w, h, 0, (.9 + cpyOffset) * h).close());\n  geo.spot1 = new go.Spot(.25, .5);\n  geo.spot2 = new go.Spot(.75, .97);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cone2\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, .9 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .9 * h, (1 - .85 / .9) * w, h, .85 / .9 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .9 * h).close());\n  var fig2 = new go.PathFigure(0, .9 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, .9 * h, (1 - .85 / .9) * w, .8 * h, .85 / .9 * w, .8 * h));\n  geo.spot1 = new go.Spot(.25, .5);\n  geo.spot2 = new go.Spot(.75, .82);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cube1\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.5 * w, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .15 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .15 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .85 * h).close());\n  var fig2 = new go.PathFigure(.5 * w, h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .15 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .5 * w, .3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, .15 * h));\n  geo.spot1 = new go.Spot(0, .3);\n  geo.spot2 = new go.Spot(.5, .85);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cube2\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, .3 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0).close());\n  var fig2 = new go.PathFigure(0, .3 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .7 * w, .3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\n  geo.spot1 = new go.Spot(0, .3);\n  geo.spot2 = new go.Spot(.7, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cylinder1\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // half the height of the ellipse\n\n  if (isNaN(param1)) param1 = 5; // default value\n\n  param1 = Math.min(param1, h / 3);\n  var geo = new go.Geometry();\n  var cpxOffset = KAPPA * .5;\n  var fig = new go.PathFigure(0, param1, true);\n  geo.add(fig); // The base (top)\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 0, 0, KAPPA * param1, (.5 - cpxOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 1.0 * w, param1, (.5 + cpxOffset) * w, 0, 1.0 * w, KAPPA * param1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h - param1)); // Bottom curve\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 1.0 * h, 1.0 * w, h - KAPPA * param1, (.5 + cpxOffset) * w, 1.0 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h - param1, (.5 - cpxOffset) * w, 1.0 * h, 0, h - KAPPA * param1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1));\n  var fig2 = new go.PathFigure(w, param1, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 2 * param1, 1.0 * w, 2 * param1 - KAPPA * param1, (.5 + cpxOffset) * w, 2 * param1));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, param1, (.5 - cpxOffset) * w, 2 * param1, 0, 2 * param1 - KAPPA * param1));\n  geo.spot1 = new go.Spot(0, 0, 0, 2 * param1);\n  geo.spot2 = new go.Spot(1, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cylinder2\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // half the height of the ellipse\n\n  if (isNaN(param1)) param1 = 5; // default value\n\n  param1 = Math.min(param1, h / 3);\n  var geo = new go.Geometry();\n  var cpxOffset = KAPPA * .5;\n  var fig = new go.PathFigure(0, h - param1, true);\n  geo.add(fig); // The body, starting and ending bottom left\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 0, 0, KAPPA * param1, (.5 - cpxOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, param1, (.5 + cpxOffset) * w, 0, w, KAPPA * param1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h - param1));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, h - KAPPA * param1, (.5 + cpxOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h - param1, (.5 - cpxOffset) * w, h, 0, h - KAPPA * param1));\n  var fig2 = new go.PathFigure(0, h - param1, false);\n  geo.add(fig2); // The base (bottom)\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h - 2 * param1, 0, h - param1 - KAPPA * param1, (.5 - cpxOffset) * w, h - 2 * param1));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, h - param1, (.5 + cpxOffset) * w, h - 2 * param1, w, h - param1 - KAPPA * param1));\n  geo.spot1 = new go.Spot(0, 0);\n  geo.spot2 = new go.Spot(1, 1, 0, -2 * param1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cylinder3\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // half the width of the ellipse\n\n  if (isNaN(param1)) param1 = 5; // default value\n\n  param1 = Math.min(param1, w / 3);\n  var geo = new go.Geometry();\n  var cpyOffset = KAPPA * .5;\n  var fig = new go.PathFigure(param1, 0, true);\n  geo.add(fig); // The body, starting and ending top left\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, w - KAPPA * param1, 0, w, (.5 - cpyOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w, (.5 + cpyOffset) * h, w - KAPPA * param1, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .5 * h, KAPPA * param1, h, 0, (.5 + cpyOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, param1, 0, 0, (.5 - cpyOffset) * h, KAPPA * param1, 0));\n  var fig2 = new go.PathFigure(param1, 0, false);\n  geo.add(fig2); // Cylinder line (left)\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 2 * param1, .5 * h, param1 + KAPPA * param1, 0, 2 * param1, (.5 - cpyOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, param1, h, 2 * param1, (.5 + cpyOffset) * h, param1 + KAPPA * param1, h));\n  geo.spot1 = new go.Spot(0, 0, 2 * param1, 0);\n  geo.spot2 = new go.Spot(1, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Cylinder4\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // half the width of the ellipse\n\n  if (isNaN(param1)) param1 = 5; // default value\n\n  param1 = Math.min(param1, w / 3);\n  var geo = new go.Geometry();\n  var cpyOffset = KAPPA * .5;\n  var fig = new go.PathFigure(w - param1, 0, true);\n  geo.add(fig); // The body, starting and ending top right\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, w - KAPPA * param1, 0, w, (.5 - cpyOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w, (.5 + cpyOffset) * h, w - KAPPA * param1, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .5 * h, KAPPA * param1, h, 0, (.5 + cpyOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, param1, 0, 0, (.5 - cpyOffset) * h, KAPPA * param1, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, 0));\n  var fig2 = new go.PathFigure(w - param1, 0, false);\n  geo.add(fig2); // Cylinder line (right)\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, w - 2 * param1, .5 * h, w - param1 - KAPPA * param1, 0, w - 2 * param1, (.5 - cpyOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w - 2 * param1, (.5 + cpyOffset) * h, w - param1 - KAPPA * param1, h));\n  geo.spot1 = new go.Spot(0, 0);\n  geo.spot2 = new go.Spot(1, 1, -2 * param1, 0);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Prism1\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.25 * w, .25 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(.25 * w, .25 * h, false);\n  geo.add(fig2); // Inner prism line\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  geo.spot1 = new go.Spot(.408, .172);\n  geo.spot2 = new go.Spot(.833, .662);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Prism2\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, .25 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(0, h, false);\n  geo.add(fig2); // Inner prism lines\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .25 * w, .5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0, .25 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .25 * w, .5 * h));\n  geo.spot1 = new go.Spot(.25, .5);\n  geo.spot2 = new go.Spot(.75, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Pyramid1\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.5 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .75 * h).close());\n  var fig2 = new go.PathFigure(.5 * w, 0, false);\n  geo.add(fig2); // Inner pyramind line\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  geo.spot1 = new go.Spot(.25, .367);\n  geo.spot2 = new go.Spot(.75, .875);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Pyramid2\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.5 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .85 * h).close());\n  var fig2 = new go.PathFigure(.5 * w, 0, false);\n  geo.add(fig2); // Inner pyramid lines\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .7 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .85 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .5 * w, .7 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, .85 * h));\n  geo.spot1 = new go.Spot(.25, .367);\n  geo.spot2 = new go.Spot(.75, .875);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Actor\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radiusw = .2;\n  var radiush = .1;\n  var offsetw = KAPPA * radiusw;\n  var offseth = KAPPA * radiush;\n  var centerx = .5;\n  var centery = .1;\n  var fig = new go.PathFigure(centerx * w, (centery + radiush) * h, true);\n  geo.add(fig); // Head\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radiusw) * w, centery * h, (centerx - offsetw) * w, (centery + radiush) * h, (centerx - radiusw) * w, (centery + offseth) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radiush) * h, (centerx - radiusw) * w, (centery - offseth) * h, (centerx - offsetw) * w, (centery - radiush) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radiusw) * w, centery * h, (centerx + offsetw) * w, (centery - radiush) * h, (centerx + radiusw) * w, (centery - offseth) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radiush) * h, (centerx + radiusw) * w, (centery + offseth) * h, (centerx + offsetw) * w, (centery + radiush) * h));\n  var r = .05;\n  var cpOffset = KAPPA * r;\n  centerx = .05;\n  centery = .25;\n  var fig2 = new go.PathFigure(.5 * w, .2 * h, true);\n  geo.add(fig2); // Body\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .95 * w, .2 * h));\n  centerx = .95;\n  centery = .25; // Right arm\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + r) * w, centery * h, (centerx + cpOffset) * w, (centery - r) * h, (centerx + r) * w, (centery - cpOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .85 * w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .85 * w, .35 * h));\n  r = .025;\n  cpOffset = KAPPA * r;\n  centerx = .825;\n  centery = .35; // Right under arm\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - r) * h, (centerx + r) * w, (centery - cpOffset) * h, (centerx + cpOffset) * w, (centery - r) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - r) * w, centery * h, (centerx - cpOffset) * w, (centery - r) * h, (centerx - r) * w, (centery - cpOffset) * h)); // Right side/leg\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .55 * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .55 * w, .7 * h)); // Right in between\n\n  r = .05;\n  cpOffset = KAPPA * r;\n  centerx = .5;\n  centery = .7;\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - r) * h, (centerx + r) * w, (centery - cpOffset) * h, (centerx + cpOffset) * w, (centery - r) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - r) * w, centery * h, (centerx - cpOffset) * w, (centery - r) * h, (centerx - r) * w, (centery - cpOffset) * h)); // Left side/leg\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .45 * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .35 * h));\n  r = .025;\n  cpOffset = KAPPA * r;\n  centerx = .175;\n  centery = .35; // Left under arm\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - r) * h, (centerx + r) * w, (centery - cpOffset) * h, (centerx + cpOffset) * w, (centery - r) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - r) * w, centery * h, (centerx - cpOffset) * w, (centery - r) * h, (centerx - r) * w, (centery - cpOffset) * h)); // Left arm\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .15 * w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .25 * h));\n  r = .05;\n  cpOffset = KAPPA * r;\n  centerx = .05;\n  centery = .25; // Left shoulder\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - r) * h, (centerx - r) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - r) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .2 * h));\n  geo.spot1 = new go.Spot(.2, .2);\n  geo.spot2 = new go.Spot(.8, .65);\n  return geo;\n});\ngo.Shape.setFigureParameter(\"Card\", 0, new FigureParameter(\"CornerCutoutSize\", .2, .1, .9));\ngo.Shape.defineFigureGenerator(\"Card\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN; // size of corner cutout\n\n  if (isNaN(param1)) param1 = .2;\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, 0).close());\n  geo.spot1 = new go.Spot(0, param1);\n  geo.spot2 = go.Spot.BottomRight;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Collate\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.5 * w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\n  var fig2 = new go.PathFigure(.5 * w, .5 * h, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\n  geo.spot1 = new go.Spot(.25, 0);\n  geo.spot2 = new go.Spot(.75, .25);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"CreateRequest\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .1;\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig); // Body\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(0, param1 * h, false);\n  geo.add(fig2); // Inside lines\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, param1 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0, (1 - param1) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, (1 - param1) * h)); //??? geo.spot1 = new go.Spot(0, param1);\n  //??? geo.spot2 = new go.Spot(1, 1 - param1);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Database\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpxOffset = KAPPA * .5;\n  var cpyOffset = KAPPA * .1;\n  var fig = new go.PathFigure(w, .1 * h, true);\n  geo.add(fig); // Body\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, (.9 + cpyOffset) * h, (.5 + cpxOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .9 * h, (.5 - cpxOffset) * w, h, 0, (.9 + cpyOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 0, 0, (.1 - cpyOffset) * h, (.5 - cpxOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .1 * h, (.5 + cpxOffset) * w, 0, w, (.1 - cpyOffset) * h));\n  var fig2 = new go.PathFigure(w, .1 * h, false);\n  geo.add(fig2); // Rings\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .2 * h, w, (.1 + cpyOffset) * h, (.5 + cpxOffset) * w, .2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .1 * h, (.5 - cpxOffset) * w, .2 * h, 0, (.1 + cpyOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, w, .2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .3 * h, w, (.2 + cpyOffset) * h, (.5 + cpxOffset) * w, .3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .2 * h, (.5 - cpxOffset) * w, .3 * h, 0, (.2 + cpyOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, w, .3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .4 * h, w, (.3 + cpyOffset) * h, (.5 + cpxOffset) * w, .4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .3 * h, (.5 - cpxOffset) * w, .4 * h, 0, (.3 + cpyOffset) * h));\n  geo.spot1 = new go.Spot(0, .4);\n  geo.spot2 = new go.Spot(1, .9);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"DataStorage\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .75 * w, h, w, 0, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, .25 * w, .9 * h, .25 * w, .1 * h).close());\n  geo.spot1 = new go.Spot(.226, 0);\n  geo.spot2 = new go.Spot(.81, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"DiskStorage\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpxOffset = KAPPA * .5;\n  var cpyOffset = KAPPA * .1;\n  var fig = new go.PathFigure(w, .1 * h, true);\n  geo.add(fig); // Body\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, (.9 + cpyOffset) * h, (.5 + cpxOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .9 * h, (.5 - cpxOffset) * w, h, 0, (.9 + cpyOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 0, 0, (.1 - cpyOffset) * h, (.5 - cpxOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .1 * h, (.5 + cpxOffset) * w, 0, w, (.1 - cpyOffset) * h));\n  var fig2 = new go.PathFigure(w, .1 * h, false);\n  geo.add(fig2); // Rings\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .2 * h, w, (.1 + cpyOffset) * h, (.5 + cpxOffset) * w, .2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .1 * h, (.5 - cpxOffset) * w, .2 * h, 0, (.1 + cpyOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, w, .2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .3 * h, w, (.2 + cpyOffset) * h, (.5 + cpxOffset) * w, .3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .2 * h, (.5 - cpxOffset) * w, .3 * h, 0, (.2 + cpyOffset) * h));\n  geo.spot1 = new go.Spot(0, .3);\n  geo.spot2 = new go.Spot(1, .9);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Display\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.25 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .75 * w, h, w, 0, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .25 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h).close());\n  geo.spot1 = new go.Spot(.25, 0);\n  geo.spot2 = new go.Spot(.75, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"DividedEvent\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .2;else if (param1 < .15) param1 = .15; // Minimum\n\n  var cpOffset = KAPPA * .2;\n  var fig = new go.PathFigure(0, .2 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, 0, 0, (.2 - cpOffset) * h, (.2 - cpOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .2 * h, (.8 + cpOffset) * w, 0, w, (.2 - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, h, w, (.8 + cpOffset) * h, (.8 + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .8 * h, (.2 - cpOffset) * w, h, 0, (.8 + cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .2 * h));\n  var fig2 = new go.PathFigure(0, param1 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, param1 * h)); //??? geo.spot1 = new go.Spot(0, param1);\n  //??? geo.spot2 = new go.Spot(1, 1 - param1);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"DividedProcess\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < .1) param1 = .1; // Minimum\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(0, param1 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, param1 * h)); //??? geo.spot1 = new go.Spot(0, param1);\n  //??? geo.spot2 = go.Spot.BottomRight;\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Document\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  h = h / .8;\n  var fig = new go.PathFigure(0, .7 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .7 * h, .5 * w, .4 * h, .5 * w, h).close());\n  geo.spot1 = go.Spot.TopLeft;\n  geo.spot2 = new go.Spot(1, .6);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"ExternalOrganization\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < .2) param1 = .2; // Minimum\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig); // Body\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(param1 * w, 0, false);\n  geo.add(fig2); // Top left triangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, param1 * h)); // Top right triangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Move, w, param1 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, 0)); // Bottom left triangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0, (1 - param1) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h)); // Bottom right triangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Move, (1 - param1) * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, (1 - param1) * h)); //??? geo.spot1 = new go.Spot(param1 / 2, param1 / 2);\n  //??? geo.spot2 = new go.Spot(1 - param1 / 2, 1 - param1 / 2);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"ExternalProcess\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.5 * w, 0, true);\n  geo.add(fig); // Body\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h).close());\n  var fig2 = new go.PathFigure(.1 * w, .4 * h, false);\n  geo.add(fig2); // Top left triangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .6 * h)); // Top right triangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .9 * w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .4 * h)); // Bottom left triangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .6 * w, .1 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .4 * w, .1 * h)); // Bottom right triangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .4 * w, .9 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .6 * w, .9 * h));\n  geo.spot1 = new go.Spot(.25, .25);\n  geo.spot2 = new go.Spot(.75, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true); // starting point\n\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(.75 * w, 0, false);\n  geo.add(fig2); // The Fold\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = go.Spot.BottomRight;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Interrupt\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  var fig2 = new go.PathFigure(w, .5 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  var fig3 = new go.PathFigure(w, .5 * h, false);\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = new go.Spot(.5, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"InternalStorage\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  var param2 = shape ? shape.parameter2 : NaN;\n  if (isNaN(param1)) param1 = .1; // Distance from left\n\n  if (isNaN(param2)) param2 = .1; // Distance from top\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig); // The main body\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(param1 * w, 0, false);\n  geo.add(fig2); // Two lines\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0, param2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, param2 * h)); //??? geo.spot1 = new go.Spot(param1, param2);\n  //??? geo.spot2 = go.Spot.BottomRight;\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Junction\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var dist = 1 / Math.SQRT2;\n  var small = (1 - 1 / Math.SQRT2) / 2;\n  var cpOffset = KAPPA * .5;\n  var radius = .5;\n  var fig = new go.PathFigure(w, radius * h, true);\n  geo.add(fig); // Circle\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, h, w, (radius + cpOffset) * h, (radius + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h, 0, (radius + cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h, (radius - cpOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0, w, (radius - cpOffset) * h));\n  var fig2 = new go.PathFigure((small + dist) * w, (small + dist) * h, false);\n  geo.add(fig2); // X\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, small * w, small * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, small * w, (small + dist) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (small + dist) * w, small * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"LinedDocument\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  h = h / .8;\n  var fig = new go.PathFigure(0, .7 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .7 * h, .5 * w, .4 * h, .5 * w, h).close());\n  var fig2 = new go.PathFigure(.1 * w, 0, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .75 * h));\n  geo.spot1 = new go.Spot(.1, 0);\n  geo.spot2 = new go.Spot(1, .6);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"LoopLimit\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .25 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h).close());\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = go.Spot.BottomRight;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"MagneticTape\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .5;\n  var radius = .5;\n  var fig = new go.PathFigure(.5 * w, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h, 0, (radius + cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h, (radius - cpOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0, w, (radius - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (radius + .1) * w, .9 * h, w, (radius + cpOffset) * h, (radius + cpOffset) * w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  geo.spot1 = new go.Spot(.15, .15);\n  geo.spot2 = new go.Spot(.85, .8);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"ManualInput\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .25 * h).close());\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = go.Spot.BottomRight;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"MessageFromUser\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .7; // How far from the right the point is\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  geo.spot1 = go.Spot.TopLeft; //??? geo.spot2 = new go.Spot(param1, 1);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"MicroformProcessing\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .25; // How far from the top/bottom the points are\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, param1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, (1 - param1) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close()); //??? geo.spot1 = new go.Spot(0, param1);\n  //??? geo.spot2 = new go.Spot(1, 1 - param1);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"MicroformRecording\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .15 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = new go.Spot(1, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"MultiDocument\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  h = h / .8;\n  var fig = new go.PathFigure(w, 0, true);\n  geo.add(fig); // Outline\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .9 * w, .44 * h, .96 * w, .47 * h, .93 * w, .45 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, .54 * h, .86 * w, .57 * h, .83 * w, .55 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .7 * h, .4 * w, .4 * h, .4 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, 0).close());\n  var fig2 = new go.PathFigure(.1 * w, .2 * h, false);\n  geo.add(fig2); // Inside lines\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .54 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .1 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .1 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .44 * h));\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = new go.Spot(.8, .77);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"MultiProcess\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.1 * w, .1 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .2 * h).close());\n  var fig2 = new go.PathFigure(.2 * w, .1 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .1 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .8 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .1 * w, .2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .9 * h));\n  geo.spot1 = new go.Spot(0, .2);\n  geo.spot2 = new go.Spot(.8, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"OfflineStorage\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .1; // Distance between 2 top lines\n\n  var l = 1 - param1; // Length of the top line\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h).close());\n  var fig2 = new go.PathFigure(.5 * param1 * w, param1 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .5 * param1) * w, param1 * h)); //??? geo.spot1 = new go.Spot(l / 4 + .5 * param1, param1);\n  //??? geo.spot2 = new go.Spot(3 * l / 4 + .5 * param1, param1 + .5 * l);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"OffPageConnector\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  geo.spot1 = go.Spot.TopLeft;\n  geo.spot2 = new go.Spot(.75, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Or\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .5;\n  var radius = .5;\n  var fig = new go.PathFigure(w, radius * h, true);\n  geo.add(fig); // Circle\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, h, w, (radius + cpOffset) * h, (radius + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h, 0, (radius + cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h, (radius - cpOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0, w, (radius - cpOffset) * h));\n  var fig2 = new go.PathFigure(w, .5 * h, false);\n  geo.add(fig2); // +\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .5 * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"PaperTape\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  h = h / .8;\n  var fig = new go.PathFigure(0, .7 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .3 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .3 * h, .5 * w, .6 * h, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .7 * h, .5 * w, .4 * h, .5 * w, h).close());\n  geo.spot1 = new go.Spot(0, .49);\n  geo.spot2 = new go.Spot(1, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"PrimitiveFromCall\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  var param2 = shape ? shape.parameter2 : NaN;\n  if (isNaN(param1)) param1 = .1; // Distance of left line from left\n\n  if (isNaN(param2)) param2 = .3; // Distance of point from right\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (1 - param2) * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close()); //??? geo.spot1 = new go.Spot(param1, 0);\n  //??? geo.spot2 = new go.Spot(1 - param2, 1);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"PrimitiveToCall\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  var param2 = shape ? shape.parameter2 : NaN;\n  if (isNaN(param1)) param1 = .1; // Distance of left line from left\n\n  if (isNaN(param2)) param2 = .3; // Distance of top and bottom right corners from right\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, (1 - param2) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (1 - param2) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close()); //??? geo.spot1 = new go.Spot(param1, 0);\n  //??? geo.spot2 = new go.Spot(1 - param2, 1);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Procedure\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN; // Distance of left  and right lines from edge\n\n  if (isNaN(param1)) param1 = .1;\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure((1 - param1) * w, 0, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, param1 * w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h)); //??? geo.spot1 = new go.Spot(param1, 0);\n  //??? geo.spot2 = new go.Spot(1 - param1, 1);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Process\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .1; // Distance of left  line from left edge\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(param1 * w, 0, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h)); //??? geo.spot1 = new go.Spot(param1, 0);\n\n  geo.spot2 = go.Spot.BottomRight;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Sort\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.5 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h).close());\n  var fig2 = new go.PathFigure(0, .5 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  geo.spot1 = new go.Spot(.25, .25);\n  geo.spot2 = new go.Spot(.75, .5);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Start\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = 0.25;\n  var fig = new go.PathFigure(param1 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 180, .75 * w, 0.5 * h, .25 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 90, 180, .25 * w, 0.5 * h, .25 * w, .5 * h));\n  var fig2 = new go.PathFigure(param1 * w, 0, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, (1 - param1) * w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, h));\n  geo.spot1 = new go.Spot(param1, 0);\n  geo.spot2 = new go.Spot(1 - param1, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Terminator\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.25 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 180, .75 * w, 0.5 * h, .25 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 90, 180, .25 * w, 0.5 * h, .25 * w, .5 * h));\n  geo.spot1 = new go.Spot(.23, 0);\n  geo.spot2 = new go.Spot(.77, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"TransmittalTape\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1)) param1 = .1; // Bottom line's distance from the point on the triangle\n\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, (1 - param1) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, (1 - param1) * h).close());\n  geo.spot1 = go.Spot.TopLeft; //??? geo.spot2 = new go.Spot(1, 1 - param1);\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"AndGate\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .5;\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig); // The gate body\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, (.5 + cpOffset) * w, 0, w, (.5 - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, (.5 + cpOffset) * h, (.5 + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  geo.spot1 = go.Spot.TopLeft;\n  geo.spot2 = new go.Spot(.55, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Buffer\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = new go.Spot(.5, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Clock\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .5;\n  var radius = .5;\n  var fig = new go.PathFigure(w, radius * h, true);\n  geo.add(fig); // Ellipse\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, h, w, (radius + cpOffset) * h, (radius + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h, 0, (radius + cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h, (radius - cpOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0, w, (radius - cpOffset) * h));\n  var fig2 = new go.PathFigure(w, radius * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, radius * h));\n  var fig3 = new go.PathFigure(.8 * w, .75 * h, false);\n  geo.add(fig3); // Inside clock\n  // This first line solves a GDI+ graphical error with\n  // more complex gradient brushes\n\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .25 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .6 * w, .25 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .6 * w, .75 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .4 * w, .75 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .4 * w, .25 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .25 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .75 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Ground\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.5 * w, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, .3 * w, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, .4 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .6 * w, h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Inverter\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .1;\n  var radius = .1;\n  var centerx = .9;\n  var centery = .5;\n  var fig = new go.PathFigure(.8 * w, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .5 * h));\n  var fig2 = new go.PathFigure((centerx + radius) * w, centery * h, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = new go.Spot(.4, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"NandGate\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpxOffset = KAPPA * .5;\n  var cpyOffset = KAPPA * .4;\n  var cpOffset = KAPPA * .1;\n  var radius = .1;\n  var centerx = .9;\n  var centery = .5;\n  var fig = new go.PathFigure(.8 * w, .5 * h, true);\n  geo.add(fig); // The gate body\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .4 * w, h, .8 * w, (.5 + cpyOffset) * h, (.4 + cpxOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .4 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, .5 * h, (.4 + cpxOffset) * w, 0, .8 * w, (.5 - cpyOffset) * h));\n  var fig2 = new go.PathFigure((centerx + radius) * w, centery * h, true);\n  geo.add(fig2); // Inversion\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  geo.spot1 = new go.Spot(0, .05);\n  geo.spot2 = new go.Spot(.55, .95);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"NorGate\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radius = .5;\n  var cpOffset = KAPPA * radius;\n  var centerx = 0;\n  var centery = .5;\n  var fig = new go.PathFigure(.8 * w, .5 * h, true);\n  geo.add(fig); // Normal\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h, .7 * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, .25 * w, .75 * h, .25 * w, .25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, .5 * h, (centerx + cpOffset) * w, (centery - radius) * h, .7 * w, (centery - cpOffset) * h));\n  radius = .1;\n  cpOffset = KAPPA * .1;\n  centerx = .9;\n  centery = .5;\n  var fig2 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig2); // Inversion\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  geo.spot1 = new go.Spot(.2, .25);\n  geo.spot2 = new go.Spot(.6, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"OrGate\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radius = .5;\n  var cpOffset = KAPPA * radius;\n  var centerx = 0;\n  var centery = .5;\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, (centerx + cpOffset + cpOffset) * w, (centery - radius) * h, .8 * w, (centery - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h, .8 * w, (centery + cpOffset) * h, (centerx + cpOffset + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, .25 * w, .75 * h, .25 * w, .25 * h).close());\n  geo.spot1 = new go.Spot(.2, .25);\n  geo.spot2 = new go.Spot(.75, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"XnorGate\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radius = .5;\n  var cpOffset = KAPPA * radius;\n  var centerx = .2;\n  var centery = .5;\n  var fig = new go.PathFigure(.1 * w, 0, false);\n  geo.add(fig); // Normal\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .1 * w, h, .35 * w, .25 * h, .35 * w, .75 * h));\n  var fig2 = new go.PathFigure(.8 * w, .5 * h, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, h, .7 * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, 0, .45 * w, .75 * h, .45 * w, .25 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, .5 * h, (centerx + cpOffset) * w, (centery - radius) * h, .7 * w, (centery - cpOffset) * h));\n  radius = .1;\n  cpOffset = KAPPA * .1;\n  centerx = .9;\n  centery = .5;\n  var fig3 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig3); // Inversion\n\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  geo.spot1 = new go.Spot(.4, .25);\n  geo.spot2 = new go.Spot(.65, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"XorGate\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radius = .5;\n  var cpOffset = KAPPA * radius;\n  var centerx = .2;\n  var centery = .5;\n  var fig = new go.PathFigure(.1 * w, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .1 * w, h, .35 * w, .25 * h, .35 * w, .75 * h));\n  var fig2 = new go.PathFigure(.2 * w, 0, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, (centerx + cpOffset) * w, (centery - radius) * h, .9 * w, (centery - cpOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, h, .9 * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, 0, .45 * w, .75 * h, .45 * w, .25 * h).close());\n  geo.spot1 = new go.Spot(.4, .25);\n  geo.spot2 = new go.Spot(.8, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Capacitor\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, false);\n  geo.add(fig); // Two vertical lines\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Resistor\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, .5 * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .4 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .6 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .5 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Inductor\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .1;\n  var radius = .1;\n  var centerx = .1;\n  var centery = .5; // Up\n\n  var fig = new go.PathFigure((centerx - cpOffset * .5) * w, h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, 0, (centerx - cpOffset) * w, h, (centerx - radius) * w, 0)); // Down up\n\n  centerx = .3;\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, h, (centerx + radius) * w, 0, (centerx + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, 0, (centerx - cpOffset) * w, h, (centerx - radius) * w, 0)); // Down up\n\n  centerx = .5;\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, h, (centerx + radius) * w, 0, (centerx + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, 0, (centerx - cpOffset) * w, h, (centerx - radius) * w, 0)); // Down up\n\n  centerx = .7;\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, h, (centerx + radius) * w, 0, (centerx + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, 0, (centerx - cpOffset) * w, h, (centerx - radius) * w, 0)); // Down up\n\n  centerx = .9;\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + cpOffset * .5) * w, h, (centerx + radius) * w, 0, (centerx + cpOffset) * w, h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"ACvoltageSource\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .5;\n  var radius = .5;\n  var centerx = .5;\n  var centery = .5;\n  var fig = new go.PathFigure((centerx - radius) * w, centery * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, (centerx - radius + .1) * w, centery * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius - .1) * w, centery * h, centerx * w, (centery - radius) * h, centerx * w, (centery + radius) * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"DCvoltageSource\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, .75 * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Diode\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  geo.spot1 = new go.Spot(0, .25);\n  geo.spot2 = new go.Spot(.5, .75);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Wifi\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var origw = w;\n  var origh = h;\n  w = w * .38;\n  h = h * .6;\n  var cpOffset = KAPPA * .8;\n  var radius = .8;\n  var centerx = 0;\n  var centery = .5;\n  var xOffset = (origw - w) / 2;\n  var yOffset = (origh - h) / 2;\n  var fig = new go.PathFigure(centerx * w + xOffset, (centery + radius) * h + yOffset, true);\n  geo.add(fig); // Left curves\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w + xOffset, centery * h + yOffset, (centerx - cpOffset) * w + xOffset, (centery + radius) * h + yOffset, (centerx - radius) * w + xOffset, (centery + cpOffset) * h + yOffset));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery - radius) * h + yOffset, (centerx - radius) * w + xOffset, (centery - cpOffset) * h + yOffset, (centerx - cpOffset) * w + xOffset, (centery - radius) * h + yOffset));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius + cpOffset * .5) * w + xOffset, centery * h + yOffset, centerx * w + xOffset, (centery - radius) * h + yOffset, (centerx - radius + cpOffset * .5) * w + xOffset, (centery - cpOffset) * h + yOffset));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery + radius) * h + yOffset, (centerx - radius + cpOffset * .5) * w + xOffset, (centery + cpOffset) * h + yOffset, centerx * w + xOffset, (centery + radius) * h + yOffset).close());\n  cpOffset = KAPPA * .4;\n  radius = .4;\n  centerx = .2;\n  centery = .5;\n  var fig2 = new go.PathFigure(centerx * w + xOffset, (centery + radius) * h + yOffset, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w + xOffset, centery * h + yOffset, (centerx - cpOffset) * w + xOffset, (centery + radius) * h + yOffset, (centerx - radius) * w + xOffset, (centery + cpOffset) * h + yOffset));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery - radius) * h + yOffset, (centerx - radius) * w + xOffset, (centery - cpOffset) * h + yOffset, (centerx - cpOffset) * w + xOffset, (centery - radius) * h + yOffset));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius + cpOffset * .5) * w + xOffset, centery * h + yOffset, centerx * w + xOffset, (centery - radius) * h + yOffset, (centerx - radius + cpOffset * .5) * w + xOffset, (centery - cpOffset) * h + yOffset));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery + radius) * h + yOffset, (centerx - radius + cpOffset * .5) * w + xOffset, (centery + cpOffset) * h + yOffset, centerx * w + xOffset, (centery + radius) * h + yOffset).close());\n  cpOffset = KAPPA * .2;\n  radius = .2;\n  centerx = .5;\n  centery = .5;\n  var fig3 = new go.PathFigure((centerx - radius) * w + xOffset, centery * h + yOffset, true);\n  geo.add(fig3); // Center circle\n\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery - radius) * h + yOffset, (centerx - radius) * w + xOffset, (centery - cpOffset) * h + yOffset, (centerx - cpOffset) * w + xOffset, (centery - radius) * h + yOffset));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w + xOffset, centery * h + yOffset, (centerx + cpOffset) * w + xOffset, (centery - radius) * h + yOffset, (centerx + radius) * w + xOffset, (centery - cpOffset) * h + yOffset));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery + radius) * h + yOffset, (centerx + radius) * w + xOffset, (centery + cpOffset) * h + yOffset, (centerx + cpOffset) * w + xOffset, (centery + radius) * h + yOffset));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w + xOffset, centery * h + yOffset, (centerx - cpOffset) * w + xOffset, (centery + radius) * h + yOffset, (centerx - radius) * w + xOffset, (centery + cpOffset) * h + yOffset));\n  cpOffset = KAPPA * .4;\n  radius = .4;\n  centerx = .8;\n  centery = .5;\n  var fig4 = new go.PathFigure(centerx * w + xOffset, (centery - radius) * h + yOffset, true);\n  geo.add(fig4); // Right curves\n\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w + xOffset, centery * h + yOffset, (centerx + cpOffset) * w + xOffset, (centery - radius) * h + yOffset, (centerx + radius) * w + xOffset, (centery - cpOffset) * h + yOffset));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery + radius) * h + yOffset, (centerx + radius) * w + xOffset, (centery + cpOffset) * h + yOffset, (centerx + cpOffset) * w + xOffset, (centery + radius) * h + yOffset));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius - cpOffset * .5) * w + xOffset, centery * h + yOffset, centerx * w + xOffset, (centery + radius) * h + yOffset, (centerx + radius - cpOffset * .5) * w + xOffset, (centery + cpOffset) * h + yOffset));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery - radius) * h + yOffset, (centerx + radius - cpOffset * .5) * w + xOffset, (centery - cpOffset) * h + yOffset, centerx * w + xOffset, (centery - radius) * h + yOffset).close());\n  cpOffset = KAPPA * .8;\n  radius = .8;\n  centerx = 1;\n  centery = .5;\n  var fig5 = new go.PathFigure(centerx * w + xOffset, (centery - radius) * h + yOffset, true);\n  geo.add(fig5);\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w + xOffset, centery * h + yOffset, (centerx + cpOffset) * w + xOffset, (centery - radius) * h + yOffset, (centerx + radius) * w + xOffset, (centery - cpOffset) * h + yOffset));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery + radius) * h + yOffset, (centerx + radius) * w + xOffset, (centery + cpOffset) * h + yOffset, (centerx + cpOffset) * w + xOffset, (centery + radius) * h + yOffset));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius - cpOffset * .5) * w + xOffset, centery * h + yOffset, centerx * w + xOffset, (centery + radius) * h + yOffset, (centerx + radius - cpOffset * .5) * w + xOffset, (centery + cpOffset) * h + yOffset));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset, (centery - radius) * h + yOffset, (centerx + radius - cpOffset * .5) * w + xOffset, (centery - cpOffset) * h + yOffset, centerx * w + xOffset, (centery - radius) * h + yOffset).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Email\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\n  var fig2 = new go.PathFigure(0, 0, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .45 * w, .54 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .55 * w, .54 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Ethernet\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.35 * w, 0, true);\n  geo.add(fig); // Boxes above the wire\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, .65 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .65 * w, .4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .35 * w, .4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .35 * w, 0).close());\n  var fig2 = new go.PathFigure(.10 * w, h, true, true);\n  geo.add(fig2); // Boxes under the wire\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .40 * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .40 * w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .10 * w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .10 * w, h).close());\n  var fig3 = new go.PathFigure(.60 * w, h, true, true);\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .90 * w, h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .90 * w, .6 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .60 * w, .6 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .60 * w, h).close());\n  var fig4 = new go.PathFigure(0, .5 * h, false);\n  geo.add(fig4); // Wire\n\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Move, .5 * w, .5 * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .4 * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Move, .75 * w, .5 * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .6 * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Move, .25 * w, .5 * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, .25 * w, .6 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Power\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var cpOffset = KAPPA * .4;\n  var radius = .4;\n  var centerx = .5;\n  var centery = .5;\n  var unused = tempPoint();\n  var mid = tempPoint();\n  var c1 = tempPoint();\n  var c2 = tempPoint(); // Find the 45 degree midpoint for the first bezier\n\n  breakUpBezier(centerx, centery - radius, centerx + cpOffset, centery - radius, centerx + radius, centery - cpOffset, centerx + radius, centery, .5, unused, unused, mid, c1, c2);\n  var start = tempPointAt(mid.x, mid.y);\n  var fig = new go.PathFigure(mid.x * w, mid.y * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, c1.x * w, c1.y * h, c2.x * w, c2.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h)); // Find the 45 degree midpoint of for the fourth bezier\n\n  breakUpBezier(centerx - radius, centery, centerx - radius, centery - cpOffset, centerx - cpOffset, centery - radius, centerx, centery - radius, .5, c1, c2, mid, unused, unused);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, mid.x * w, mid.y * h, c1.x * w, c1.y * h, c2.x * w, c2.y * h)); // now make a smaller circle\n\n  cpOffset = KAPPA * .3;\n  radius = .3; // Find the 45 degree midpoint for the first bezier\n\n  breakUpBezier(centerx - radius, centery, centerx - radius, centery - cpOffset, centerx - cpOffset, centery - radius, centerx, centery - radius, .5, c1, c2, mid, unused, unused);\n  fig.add(new go.PathSegment(go.PathSegment.Line, mid.x * w, mid.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, c2.x * w, c2.y * h, c1.x * w, c1.y * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h, (centerx - cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h)); // Find the 45 degree midpoint for the fourth bezier\n\n  breakUpBezier(centerx, centery - radius, centerx + cpOffset, centery - radius, centerx + radius, centery - cpOffset, centerx + radius, centery, .5, unused, unused, mid, c1, c2);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, mid.x * w, mid.y * h, c2.x * w, c2.y * h, c1.x * w, c1.y * h).close());\n  var fig = new go.PathFigure(.45 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .45 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .55 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .55 * w, 0).close());\n  freePoint(unused);\n  freePoint(mid);\n  freePoint(c1);\n  freePoint(c2);\n  freePoint(start);\n  geo.spot1 = new go.Spot(.25, .45);\n  geo.spot2 = new go.Spot(.75, .8);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Fallout\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h / 2, true);\n  geo.add(fig); // Containing circle\n\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 180, 360, w / 2, h / 2, w / 2, h / 2));\n\n  function drawTriangle(fig, offsetx, offsety) {\n    fig.add(new go.PathSegment(go.PathSegment.Move, (.3 + offsetx) * w, (.8 + offsety) * h));\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.5 + offsetx) * w, (.5 + offsety) * h));\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.1 + offsetx) * w, (.5 + offsety) * h));\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.3 + offsetx) * w, (.8 + offsety) * h).close());\n  } // Triangles\n\n\n  drawTriangle(fig, 0, 0);\n  drawTriangle(fig, 0.4, 0);\n  drawTriangle(fig, 0.2, -0.3);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"IrritationHazard\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.2 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .3 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .2 * h).close());\n  geo.spot1 = new go.Spot(.3, .3);\n  geo.spot2 = new go.Spot(.7, .7);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"ElectricalHazard\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.37 * w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .11 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .77 * w, .04 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .33 * w, .49 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .37 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .63 * w, .86 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .77 * w, .91 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .34 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .34 * w, .78 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .44 * w, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .65 * w, .56 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .68 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"FireHazard\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.1 * w, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .29 * w, 0, -.25 * w, .63 * h, .45 * w, .44 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .51 * w, .42 * h, .48 * w, .17 * h, .54 * w, .35 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .59 * w, .18 * h, .59 * w, .29 * h, .58 * w, .28 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .75 * w, .6 * h, .8 * w, .34 * h, .88 * w, .43 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .88 * w, .31 * h, .87 * w, .48 * h, .88 * w, .43 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .9 * w, h, 1.17 * w, .76 * h, .82 * w, .8 * h).close());\n  geo.spot1 = new go.Spot(.07, .445);\n  geo.spot2 = new go.Spot(.884, .958);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnActivityLoop\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var r = .5;\n  var cx = 0; // offset from Center x\n\n  var cy = 0; // offset from Center y\n\n  var d = r * KAPPA;\n  var mx1 = .4 * Math.SQRT2 / 2 + .5;\n  var my1 = .5 - .5 * Math.SQRT2 / 2;\n  var x1 = 1;\n  var y1 = .5;\n  var x2 = .5;\n  var y2 = 0;\n  var fig = new go.PathFigure(mx1 * w, (1 - my1) * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, x1 * w, y1 * h, x1 * w, .7 * h, x1 * w, y1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (x2 + cx) * w, (y2 + cx) * h, (.5 + r + cx) * w, (.5 - d + cx) * h, (.5 + d + cx) * w, (.5 - r + cx) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h, (.5 - d + cx) * w, (.5 - r + cy) * h, (.5 - r + cx) * w, (.5 - d + cy) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (.35 + cx) * w, .9 * h, (.5 - r + cx) * w, (.5 + d + cy) * h, (.5 - d + cx) * w, .9 * h)); // Arrowhead\n\n  fig.add(new go.PathSegment(go.PathSegment.Move, (.25 + cx) * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (.35 + cx) * w, 0.9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (.20 + cx) * w, 0.95 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnActivityParallel\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnActivitySequential\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnActivityAdHoc\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, false);\n  geo.add(fig);\n  var fig2 = new go.PathFigure(w, h, false);\n  geo.add(fig2);\n  var fig3 = new go.PathFigure(0, .5 * h, false);\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .5 * h, .2 * w, .35 * h, .3 * w, .35 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, .7 * w, .65 * h, .8 * w, .65 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnActivityCompensation\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, .5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnTaskMessage\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, .2 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .8 * h).close());\n  var fig = new go.PathFigure(0, .2 * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, .2 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnTaskScript\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.7 * w, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0, .6 * w, .5 * h, 0, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, .7 * w, h, .4 * w, .5 * h, w, .5 * h).close());\n  var fig2 = new go.PathFigure(.45 * w, .73 * h, false);\n  geo.add(fig2); // Lines on script\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .73 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .38 * w, .5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .63 * w, .5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .31 * w, .27 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .56 * w, .27 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnTaskUser\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, false);\n  geo.add(fig);\n  var fig2 = new go.PathFigure(.335 * w, (1 - .555) * h, true);\n  geo.add(fig2); // Shirt\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .335 * w, (1 - .405) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .335) * w, (1 - .405) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .335) * w, (1 - .555) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, .68 * h, (1 - .12) * w, .46 * h, (1 - .02) * w, .54 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .68 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, .335 * w, (1 - .555) * h, .02 * w, .54 * h, .12 * w, .46 * h)); // Start of neck\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .365 * w, (1 - .595) * h));\n  var radiushead = .5 - .285;\n  var centerx = .5;\n  var centery = radiushead;\n  var alpha2 = Math.PI / 4;\n  var KAPPA = 4 * (1 - Math.cos(alpha2)) / (3 * Math.sin(alpha2));\n  var cpOffset = KAPPA * .5;\n  var radiusw = radiushead;\n  var radiush = radiushead;\n  var offsetw = KAPPA * radiusw;\n  var offseth = KAPPA * radiush; // Circle (head)\n\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radiusw) * w, centery * h, (centerx - (offsetw + radiusw) / 2) * w, (centery + (radiush + offseth) / 2) * h, (centerx - radiusw) * w, (centery + offseth) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radiush) * h, (centerx - radiusw) * w, (centery - offseth) * h, (centerx - offsetw) * w, (centery - radiush) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radiusw) * w, centery * h, (centerx + offsetw) * w, (centery - radiush) * h, (centerx + radiusw) * w, (centery - offseth) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .365) * w, (1 - .595) * h, (centerx + radiusw) * w, (centery + offseth) * h, (centerx + (offsetw + radiusw) / 2) * w, (centery + (radiush + offseth) / 2) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .365) * w, (1 - .595) * h)); // Neckline\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .335) * w, (1 - .555) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .335) * w, (1 - .405) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .335 * w, (1 - .405) * h));\n  var fig3 = new go.PathFigure(.2 * w, h, false);\n  geo.add(fig3); // Arm lines\n\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .8 * h));\n  var fig4 = new go.PathFigure(.8 * w, h, false);\n  geo.add(fig4);\n  fig4.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .8 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnEventConditional\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(.1 * w, 0, true);\n  geo.add(fig); // Body\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, h).close());\n  var fig2 = new go.PathFigure(.2 * w, .2 * h, false);\n  geo.add(fig2); // Inside lines\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .8 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .8 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnEventError\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, .33 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .66 * w, .50 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .66 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .33 * w, .50 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnEventEscalation\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, false);\n  geo.add(fig); // Set dimensions\n\n  var fig2 = new go.PathFigure(w, h, false);\n  geo.add(fig2);\n  var fig3 = new go.PathFigure(.1 * w, h, true);\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .9 * w, h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Caution\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0.05 * w, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.1 * w, .8 * h, 0, h, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, .1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.55 * w, .1 * h, 0.5 * w, 0, 0.5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.95 * w, 0.9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.9 * w, h, w, h, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.05 * w, h));\n  var radius = 0.05; // Bottom circle of exclamation point\n\n  fig.add(new go.PathSegment(go.PathSegment.Move, (0.5 - radius) * w, 0.875 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 180, -360, 0.5 * w, 0.875 * h, radius * w, radius * h)); // Upper rectangle of exclamation point\n\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.325 * h, 0.575 * w, 0.725 * h, 0.625 * w, 0.375 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.75 * h, 0.375 * w, 0.375 * h, 0.425 * w, 0.725 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Recycle\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0.45 * w, 0.95 * h, false);\n  geo.add(fig); // Bottom left arrow\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.95 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.185 * w, 0.85 * h, 0.17 * w, 0.95 * h, 0.15 * w, 0.9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.235 * w, 0.75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.30 * w, 0.625 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.35 * w, 0.65 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.275 * w, 0.45 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.05 * w, 0.45 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.05 * w, 0.575 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.1875 * w, 0.95 * h, 0, 0.675 * h, 0, 0.7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.45 * w, 0.95 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.775 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.22 * w, 0.775 * h));\n  var fig2 = new go.PathFigure(0.475 * w, 0.2 * h, false);\n  geo.add(fig2); // Top arrow\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.225 * w, 0.3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.275 * w, 0.175 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.325 * w, 0.05 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.4 * w, 0.05 * h, 0.35 * w, 0, 0.375 * w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.575 * w, 0.375 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.525 * w, 0.4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.475 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.315 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.32 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.05 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.575 * w, 0, 0.65 * w, 0.05 * h, 0.625 * w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.38 * w, 0.0105 * h));\n  var fig3 = new go.PathFigure(0.675 * w, 0.575 * h, false);\n  geo.add(fig3); // Bottom right arrow\n\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.875 * w, 0.525 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w, 0.775 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, 0.85 * w, 0.95 * h, w, 0.8 * h, w, 0.85 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.95 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.85 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.725 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.775 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.775 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w, 0.775 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Move, 0.675 * w, 0.575 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.775 * w, 0.775 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"BpmnEventTimer\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radius = .5;\n  var cpOffset = KAPPA * .5;\n  var fig = new go.PathFigure(w, radius * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, h, w, (radius + cpOffset) * h, (radius + cpOffset) * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h, 0, (radius + cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h, (radius - cpOffset) * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0, w, (radius - cpOffset) * h));\n  var fig2 = new go.PathFigure(radius * w, 0, false);\n  geo.add(fig2); // Hour lines\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, radius * w, .15 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, radius * w, h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, radius * w, .85 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0, radius * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .15 * w, radius * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, w, radius * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .85 * w, radius * h)); // Clock hands\n\n  fig2.add(new go.PathSegment(go.PathSegment.Move, radius * w, radius * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .58 * w, 0.1 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Move, radius * w, radius * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .78 * w, .54 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Package\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0.15 * h, true);\n  geo.add(fig); // Package bottom rectangle\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.15 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  var fig2 = new go.PathFigure(0, 0.15 * h, true);\n  geo.add(fig2); // Package top flap\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.15 * h).close());\n  geo.spot1 = new go.Spot(0, 0.1);\n  geo.spot2 = new go.Spot(1, 1);\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Class\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig); // Class box\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\n  var fig2 = new go.PathFigure(0, 0.2 * h, false);\n  geo.add(fig2); // Top box separater\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.2 * h).close());\n  var fig3 = new go.PathFigure(0, 0.5 * h, false);\n  geo.add(fig3); // Middle box separater\n\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Component\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, h, true);\n  geo.add(fig); // Component Box\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h).close());\n  var fig2 = new go.PathFigure(0, 0.2 * h, true);\n  geo.add(fig2); // Component top sub box\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.2 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0.4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0.2 * h).close());\n  var fig3 = new go.PathFigure(0, 0.6 * h, true);\n  geo.add(fig3); // Component bottom sub box\n\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.6 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.8 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0, 0.8 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0, 0.6 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Boat Shipment\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0.15 * w, 0.6 * h, true);\n  geo.add(fig); // Boat shipment flag\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0.6 * h));\n  var fig2 = new go.PathFigure(0.15 * w, 0.6 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.6 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Customer/Supplier\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.66 * w, 0.33 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.66 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.33 * w, 0.33 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.33 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.33 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Workcell\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.35 * w, 0.4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.35 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Supermarket\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.33 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.33 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, w, 0.33 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.66 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.66 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, w, 0.66 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"TruckShipment\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig); // Left rectangle\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\n  var fig2 = new go.PathFigure(w, 0.8 * h, true);\n  geo.add(fig2); // Right rectangle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.8 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.8 * h).close());\n  var radius = .1;\n  var cpOffset = KAPPA * .1;\n  var centerx = .2;\n  var centery = .9;\n  var fig3 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig3); // Left wheel\n\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h).close());\n  radius = .1;\n  cpOffset = KAPPA * .1;\n  centerx = .8;\n  centery = .9;\n  var fig4 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig4); // Right wheel\n\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"KanbanPost\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0.2 * w, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, .5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Forklift\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  var fig2 = new go.PathFigure(0, 0.5 * h, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0.8 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.8 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\n  var fig3 = new go.PathFigure(0.50 * w, 0.8 * h, true);\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.50 * w, 0.1 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.1 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.8 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.50 * w, 0.8 * h));\n  var fig4 = new go.PathFigure(0.5 * w, 0.7 * h, false);\n  geo.add(fig4);\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w, 0.7 * h));\n  var radius = .1;\n  var cpOffset = KAPPA * .1;\n  var centerx = .1;\n  var centery = .9;\n  var fig5 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig5);\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  radius = .1;\n  cpOffset = KAPPA * .1;\n  centerx = .4;\n  centery = .9;\n  var fig6 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig6);\n  fig6.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig6.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig6.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig6.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"RailShipment\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0.1 * w, 0.4 * h, true);\n  geo.add(fig); // Left cart\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.9 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.4 * h).close());\n  var fig2 = new go.PathFigure(0.45 * w, 0.7 * h, false);\n  geo.add(fig2); // Line connecting carts\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.7 * h));\n  var fig3 = new go.PathFigure(0.55 * w, 0.4 * h, true);\n  geo.add(fig3); // Right cart\n\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.4 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.9 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.9 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.4 * h).close());\n  var radius = .05;\n  var cpOffset = KAPPA * .05;\n  var centerx = .175;\n  var centery = .95;\n  var fig4 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig4); // Wheels\n\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  var radius = .05;\n  var cpOffset = KAPPA * .05;\n  var centerx = .375;\n  var centery = .95;\n  var fig5 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig5);\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  var radius = .05;\n  var cpOffset = KAPPA * .05;\n  var centerx = .625;\n  var centery = .95;\n  var fig6 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig6);\n  fig6.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig6.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig6.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig6.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  var radius = .05;\n  var cpOffset = KAPPA * .05;\n  var centerx = .825;\n  var centery = .95;\n  var fig7 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig7);\n  fig7.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig7.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig7.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig7.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h).close());\n  var fig8 = new go.PathFigure(0, h, false);\n  geo.add(fig8);\n  fig8.add(new go.PathSegment(go.PathSegment.Line, w, h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Warehouse\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\n  var fig2 = new go.PathFigure(0, 0.2 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.2 * h).close());\n  var fig3 = new go.PathFigure(0.15 * w, h, true);\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0.5 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.40 * w, 0.5 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.40 * w, h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, h).close());\n  var radius = .05;\n  var cpOffset = KAPPA * .05;\n  var centerx = .35;\n  var centery = .775;\n  var fig4 = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig4); // Door handle\n\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h).close());\n  ;\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"ControlCenter\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.1 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.8 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Bluetooth\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0.75 * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.25 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Bookmark\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.4 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Bookmark\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.4 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Globe\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0.5 * w, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.5 * h, 0.75 * w, 0, w, 0.25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, h, w, 0.75 * h, 0.75 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0.5 * h, 0.25 * w, h, 0, 0.75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0, 0, 0.25 * h, 0.25 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, h, 0.15 * w, 0.25 * h, 0.15 * w, 0.75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0, 0.85 * w, 0.75 * h, 0.85 * w, 0.25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.1675 * w, 0.15 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.8325 * w, 0.15 * h, 0.35 * w, 0.3 * h, 0.65 * w, 0.3 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.1675 * w, 0.85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.8325 * w, 0.85 * h, 0.35 * w, 0.7 * h, 0.65 * w, 0.7 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Wave\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0.25 * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0.25 * h, 0.10 * w, 0, 0.2 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.7 * w, 0.25 * h, 0.425 * w, 0.5 * h, 0.575 * w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.25 * h, 0.8 * w, 0, 0.9 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0, 0.25 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.75 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0.75 * h, 0.10 * w, 0.5 * h, 0.2 * w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.7 * w, 0.75 * h, 0.425 * w, h, 0.575 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.75 * h, 0.8 * w, 0.5 * h, 0.9 * w, 0.5 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Operator\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radius = .3;\n  var cpOffset = KAPPA * .3;\n  var centerx = .5;\n  var centery = .7;\n  var fig = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  var fig2 = new go.PathFigure(0, 0.7 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.7 * h, 0, 0, w, 0));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"TripleFanBlades\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0.5 * w, 0, true);\n  geo.add(fig); // Top blade\n\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.65 * h, 0.65 * w, 0.3 * h, 0.65 * w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0, 0.35 * w, 0.5 * h, 0.35 * w, 0.3 * h)); // Bottom left blade\n\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.65 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h, 0.3 * w, 0.6 * h, 0.1 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.65 * h, 0.2 * w, h, 0.35 * w, 0.95 * h)); // Bottom right blade\n\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.65 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, h, 0.7 * w, 0.6 * h, 0.9 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.65 * h, 0.8 * w, h, 0.65 * w, 0.95 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"CentrifugalPump\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0.5 * h, 0, 0.075 * h, 0, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.4 * w, h, 0, h, 0.4 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.8 * w, 0.4 * h, 0.8 * w, h, 0.85 * w, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Battery\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.4 * w, 0.1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.1 * h));\n  var fig2 = new go.PathFigure(0, 0.6 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0, 0.4 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.4 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Delete\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radius = .5;\n  var cpOffset = KAPPA * .5;\n  var centerx = .5;\n  var centery = .5;\n  var fig = new go.PathFigure((centerx - radius) * w, centery * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h));\n  var fig2 = new go.PathFigure(0.15 * w, 0.5 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.5 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Flag\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0.1 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0, 0.1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.1 * h, 0.15 * w, 0, 0.35 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.1 * h, 0.65 * w, 0.2 * h, 0.85 * w, 0.2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.5 * h, 0.85 * w, 0.6 * h, 0.65 * w, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0.5 * h, 0.35 * w, 0.4 * h, 0.15 * w, 0.4 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Help\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var radius = .5;\n  var cpOffset = KAPPA * .5;\n  var centerx = .5;\n  var centery = .5;\n  var fig = new go.PathFigure((centerx - radius) * w, centery * h, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h).close());\n  radius = .05;\n  cpOffset = KAPPA * .05;\n  centerx = .5;\n  centery = .8;\n  var fig2 = new go.PathFigure((centerx - radius) * w, centery * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h, (centerx - cpOffset) * w, (centery - radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h, (centerx + cpOffset) * w, (centery + radius) * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h).close());\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.7 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.2 * h, 0.75 * w, 0.475 * h, 0.75 * w, 0.225 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0.35 * h, 0.4 * w, 0.2 * h, 0.3 * w, 0.25 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Location\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0.5 * w, h, true).add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.5 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0, .975 * w, 0.025 * h, 0.5 * w, 0)).add(new go.PathSegment(go.PathSegment.Bezier, 0.25 * w, 0.5 * h, 0.5 * w, 0, 0.025 * w, 0.025 * h).close()).add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.2 * h)).add(new go.PathSegment(go.PathSegment.Arc, 270, 360, 0.5 * w, 0.3 * h, 0.1 * w, 0.1 * h).close()));\n});\ngo.Shape.defineFigureGenerator(\"Lock\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0.5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\n  var fig2 = new go.PathFigure(0.2 * w, 0.5 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.8 * w, 0.3 * h, 0.25 * w, 0, 0.75 * w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.3 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Unlocked\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0.5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\n  var fig2 = new go.PathFigure(0.2 * w, 0.5 * h, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.5 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.3 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.8 * w, 0.3 * h, 0.25 * w, 0, 0.75 * w, 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.35 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Gear\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0.9375 * w, 0.56246875 * h, true).add(new go.PathSegment(go.PathSegment.Line, 0.9375 * w, 0.4375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.80621875 * w, 0.4375 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.763 * w, 0.3316875 * h, 0.79840625 * w, 0.39915625 * h, 0.7834375 * w, 0.3635 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.8566875 * w, 0.23796875 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.76825 * w, 0.14959375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.67596875 * w, 0.24184375 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.5625 * w, 0.19378125 * h, 0.64228125 * w, 0.2188125 * h, 0.603875 * w, 0.2021875 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.5625 * w, 0.0625 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.4375 * w, 0.0625 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.4375 * w, 0.19378125 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.32775 * w, 0.239375 * h, 0.39759375 * w, 0.20190625 * h, 0.36053125 * w, 0.2176875 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.2379375 * w, 0.14959375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.14953125 * w, 0.2379375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.23934375 * w, 0.3278125 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.19378125 * w, 0.4375 * h, 0.21765625 * w, 0.36059375 * h, 0.201875 * w, 0.397625 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.0625 * w, 0.4375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.0625 * w, 0.5625 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.1938125 * w, 0.5625 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.241875 * w, 0.67596875 * h, 0.20221875 * w, 0.603875 * h, 0.21884375 * w, 0.64228125 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.1495625 * w, 0.76825 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.238 * w, 0.8566875 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.3316875 * w, 0.76296875 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.43753125 * w, 0.80621875 * h, 0.36353125 * w, 0.78340625 * h, 0.3991875 * w, 0.79840625 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.43753125 * w, 0.9375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.5625 * w, 0.9375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.5625 * w, 0.80621875 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.67225 * w, 0.760625 * h, 0.602375 * w, 0.79809375 * h, 0.63946875 * w, 0.78234375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.76828125 * w, 0.8566875 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.85671875 * w, 0.76825 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.76065625 * w, 0.67221875 * h)).add(new go.PathSegment(go.PathSegment.Bezier, 0.80621875 * w, 0.56246875 * h, 0.78234375 * w, 0.63940625 * h, 0.798125 * w, 0.602375 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.9375 * w, 0.56246875 * h).close()).add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.6 * h)).add(new go.PathSegment(go.PathSegment.Arc, 90, 360, 0.5 * w, 0.5 * h, 0.1 * w, 0.1 * h).close()));\n});\ngo.Shape.defineFigureGenerator(\"Hand\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0.5 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.1 * w, 0.3 * h, 0, 0.375 * h, 0.05 * w, 0.325 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.45 * w, 0.075 * h, 0.3 * w, 0.225 * h, 0.4 * w, 0.175 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.525 * w, 0.075 * h, 0.46 * w, 0.05 * h, 0.525 * w, 0.05 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0.4 * h, 0.525 * w, 0.275 * h, 0.475 * w, 0.325 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.4 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.9 * w, 0.55 * h, w, 0.4 * h, w, 0.55 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.425 * w, 0.55 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.55 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.6 * w, 0.7 * h, 0.675 * w, 0.55 * h, 0.675 * w, 0.7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.575 * w, 0.7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.575 * w, 0.85 * h, 0.65 * w, 0.7 * h, 0.65 * w, 0.85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.525 * w, 0.85 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.535 * w, h, 0.61 * w, 0.85 * h, 0.61 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0.9 * h, 0.435 * w, h, 0, h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Map\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0.2 * h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.25 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.25 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.25 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.25 * w, 0.8 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.2 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.75 * w, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.8 * h));\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Eject\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h, true);\n  geo.add(fig); // bottam rectangle section\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h * .7));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .7).close());\n  var fig2 = new go.PathFigure(0, h * .6, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w, .6 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Pencil\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, true).add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.1 * h)).add(new go.PathSegment(go.PathSegment.Line, w, 0.9 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, h)).add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.2 * h).close()));\n});\ngo.Shape.defineFigureGenerator(\"Building\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * 1, h * 1, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * 1)); // bottom part\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .85));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .046 * w, h * .85));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .046 * w, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .30));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .046 * w, h * .30));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (1 - .046) * w, h * .30));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h * .30));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (1 - .046) * w, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, (1 - .046) * w, h * .85));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h * .85).close());\n  var fig2 = new go.PathFigure(.126 * w, .85 * h, false); // is filled in our not\n\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .126 * w, .45 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .322 * w, .45 * h));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, .322 * w, .85 * h).close());\n  var fig3 = new go.PathFigure(.402 * w, .85 * h, false); // is filled in our not\n\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .402 * w, .45 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .598 * w, .45 * h));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, .598 * w, .85 * h).close());\n  var fig4 = new go.PathFigure(.678 * w, .85 * h, false); // is filled in our not\n\n  geo.add(fig4);\n  fig4.add(new go.PathSegment(go.PathSegment.Line, .678 * w, .45 * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, .874 * w, .45 * h));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, .874 * w, .85 * h).close()); // the top inner triangle\n\n  var fig5 = new go.PathFigure(.5 * w, .1 * h, false); // is filled in our not\n\n  geo.add(fig5);\n  fig5.add(new go.PathSegment(go.PathSegment.Line, (.046 + .15) * w, .30 * h));\n  fig5.add(new go.PathSegment(go.PathSegment.Line, (1 - (.046 + .15)) * w, .30 * h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Staircase\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h * 1, true);\n  geo.add(fig); // Bottom part\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .20, h * 1)); // bottom left part\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .20, h * .80));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .80));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .60));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .60));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .40));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .80, h * .40));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .80, h * .20));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .20));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .15));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .15));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .35));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .35));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .55));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * .55));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .15, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .15, h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .95).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"5Bars\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, h * 1, true); // bottom left\n\n  geo.add(fig); // Width of each bar is .184\n  // space in between each bar is .2\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .184, h * 1)); // bottom left part\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .184, h * (1 - .184)).close());\n  var fig3 = new go.PathFigure(w * .204, h, true); // is filled in our not\n\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .204, h * (1 - .184)));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .388, h * (1 - .184 * 2)));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .388, h * 1).close());\n  var fig4 = new go.PathFigure(w * .408, h, true); // is filled in our not\n\n  geo.add(fig4);\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .408, h * (1 - .184 * 2)));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .592, h * (1 - .184 * 3)));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .592, h * 1).close());\n  var fig5 = new go.PathFigure(w * .612, h, true); // is filled in our not\n\n  geo.add(fig5);\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * .612, h * (1 - .184 * 3)));\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * .796, h * (1 - .184 * 4)));\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * .796, h * 1).close());\n  var fig6 = new go.PathFigure(w * .816, h, true); // is filled in our not\n\n  geo.add(fig6);\n  fig6.add(new go.PathSegment(go.PathSegment.Line, w * .816, h * (1 - .184 * 4)));\n  fig6.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * (1 - .184 * 5)));\n  fig6.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"PC\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, true); // top right\n\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .3, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .3, 0).close()); // Drive looking rectangle 1\n\n  var fig2 = new go.PathFigure(w * .055, .07 * h, true); // is filled in our not\n\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .07));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .1));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .055, h * .1).close()); // Drive looking rectangle 2\n\n  var fig3 = new go.PathFigure(w * .055, .13 * h, true); // is filled in our not\n\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .13));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .16));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .055, h * .16).close()); // Drive/cd rom looking rectangle 3\n\n  var fig4 = new go.PathFigure(w * .055, .18 * h, true); // is filled in our not\n\n  geo.add(fig4);\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .18));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .21));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .055, h * .21).close());\n  var fig5 = new go.PathFigure(w * 1, 0, true); // is filled in our not\n\n  geo.add(fig5);\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * .4, 0));\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * .4, h * .65));\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .65).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Plane\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0.55 * w, h, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.7 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, 0.475 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.35 * w, 0.525 * h, 0, 0.4 * h, 0.225 * w, 0.45 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.475 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0.35 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.325 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.325 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.1 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.9 * w, 0.2 * h, 0.975 * w, 0, w, .08 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.45 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.95 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, h).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Key\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * 1, h * .5, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .90, .40 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, .40 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, .35 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, .35 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, .20 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .15, .20 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .35 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, .65 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .15, .80 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, .80 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, .65 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, .65 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, .6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .60, .6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .65, .55 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, .6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, .55 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .80, .6 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .85, .575 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .9, 0.60 * h).close());\n  fig.add(new go.PathSegment(go.PathSegment.Move, 0.17 * w, 0.425 * h));\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 360, 0.17 * w, 0.5 * h, 0.075 * w, 0.075 * h).close());\n  return geo;\n}); // movie like logo\n\ngo.Shape.defineFigureGenerator(\"FilmTape\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(0, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 180, w * 0, w * 0.3, w * 0.055)); // left semi-circle\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .08, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .08, h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 1), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 1), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 2), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 2), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 3), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 3), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 4), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 4), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 5), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 5), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 6), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 6), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 7), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 7), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 8), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 8), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 9), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 9), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 10), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 10), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 11), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 11), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 12), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 12), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 13), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 13), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 14), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 14), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 15), h * .95));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 15), h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\n  var fig2 = new go.PathFigure(0, 0, false); // is filled in our not\n\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Arc, 270, -180, w * 1, w * 0.3, w * 0.055)); // right semi circle\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1)); // Each of the little square boxes on the tape\n\n  var fig3 = new go.PathFigure(w * .11, h * .1, false); // is filled in our not\n\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + .24133333 * 1 + .028 * 0), h * .1));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + .24133333 * 1 + .028 * 0), h * .8));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .11, h * .8).close());\n  var fig4 = new go.PathFigure(w * (.11 + .24133333 * 1 + .028 * 1), h * .1, false); // is filled in our not\n\n  geo.add(fig4);\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + .24133333 * 2 + .028 * 1), h * .1));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + .24133333 * 2 + .028 * 1), h * .8));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + .24133333 * 1 + .028 * 1), h * .8).close());\n  var fig5 = new go.PathFigure(w * (.11 + .24133333 * 2 + .028 * 2), h * .1, false); // is filled in our not\n\n  geo.add(fig5);\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + .24133333 * 3 + .028 * 2), h * .1));\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + .24133333 * 3 + .028 * 2), h * .8));\n  fig5.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + .24133333 * 2 + .028 * 2), h * .8).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"FloppyDisk\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var roundValue = 8;\n  var cpOffset = roundValue * KAPPA;\n  var fig = new go.PathFigure(roundValue, 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .86, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .14));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h - roundValue));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w - roundValue, h, w, h - cpOffset, w - cpOffset, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, roundValue, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h - roundValue, cpOffset, h, 0, h - cpOffset));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, roundValue));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, roundValue, 0, 0, cpOffset, cpOffset, 0).close()); // interior slightly  rectangle\n\n  var fig2 = new go.PathFigure(w * .83, 0, false);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .83, h * .3));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .17, h * .3));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .17, h * 0).close());\n  var fig3 = new go.PathFigure(w * .83, h * 1, false);\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .83, h * .5));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .17, h * .5));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .17, h * 1).close());\n  var fig4 = new go.PathFigure(w * .78, h * .05, false);\n  geo.add(fig4);\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .05));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .25));\n  fig4.add(new go.PathSegment(go.PathSegment.Line, w * .78, h * .25).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"SpeechBubble\", function (shape, w, h) {\n  var param1 = shape ? shape.parameter1 : NaN;\n  if (isNaN(param1) || param1 < 0) param1 = 15; // default corner\n\n  param1 = Math.min(param1, w / 3);\n  param1 = Math.min(param1, h / 3);\n  var cpOffset = param1 * KAPPA;\n  var bubbleH = h * .8; // leave some room at bottom for pointer\n\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(param1, 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, 0));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w, param1, w - cpOffset, 0, w, cpOffset));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, bubbleH - param1));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, bubbleH, w, bubbleH - cpOffset, w - cpOffset, bubbleH));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, bubbleH));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, bubbleH));\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1, bubbleH));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, bubbleH - param1, cpOffset, bubbleH, 0, bubbleH - cpOffset));\n  fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, param1, 0, 0, cpOffset, cpOffset, 0).close());\n\n  if (cpOffset > 1) {\n    geo.spot1 = new go.Spot(0, 0, cpOffset, cpOffset);\n    geo.spot2 = new go.Spot(1, .8, -cpOffset, -cpOffset);\n  } else {\n    geo.spot1 = go.Spot.TopLeft;\n    geo.spot2 = new go.Spot(1, .8);\n  }\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Repeat\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * 0, h * .45, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, h * .90));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .90));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .65, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .20, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .20, h * .45).close());\n  var fig2 = new go.PathFigure(w * 1, h * .55, true); // is filled in our not\n\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * 1));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .50, h * .55));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .70, h * .55));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .70, h * .10));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .10));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .80, h * 0));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .80, h * .55).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Windows\", function (shape, w, h) {\n  return new go.Geometry().add(new go.PathFigure(0, 0, true).add(new go.PathSegment(go.PathSegment.Line, w, 0)).add(new go.PathSegment(go.PathSegment.Line, w, h)).add(new go.PathSegment(go.PathSegment.Line, 0, h).close()).add(new go.PathSegment(go.PathSegment.Move, 0.4 * w, 0.4 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.8 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.8 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.4 * h).close()).add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.1 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.6 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.6 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.1 * h).close()).add(new go.PathSegment(go.PathSegment.Move, 0.1 * w, 0.6 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.9 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.9 * h)).add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.6 * h).close()));\n});\ngo.Shape.defineFigureGenerator(\"Terminal\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * 0, h * .10, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .10));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .90));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * .90).close());\n  var fig2 = new go.PathFigure(w * .10, h * .20, true); // is filled in our not\n\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .10, h * .25));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .22, h * .285)); // midpoint\n\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .10, h * .32));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .10, h * .37));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .275, h * .32));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .275, h * .25).close());\n  var fig3 = new go.PathFigure(w * .28, h * .37, true); // is filled in our not\n\n  geo.add(fig3);\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .37));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .41));\n  fig3.add(new go.PathSegment(go.PathSegment.Line, w * .28, h * .41).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Beaker\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var param1 = 15;\n  var cpOffset = param1 * KAPPA;\n  var fig = new go.PathFigure(w * .62, h * .475, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w, h - param1));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w, h - cpOffset, w - cpOffset, h));\n  fig.add(new go.PathSegment(go.PathSegment.Line, param1, h));\n  fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h - param1, cpOffset, h, 0, h - cpOffset));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .38, h * .475));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .38, h * .03));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .36, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .64, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .62, h * .03).close());\n\n  if (cpOffset > 1) {\n    geo.spot1 = new go.Spot(0, 0, cpOffset, cpOffset);\n    geo.spot2 = new go.Spot(1, 1, -cpOffset, -cpOffset);\n  } else {\n    geo.spot1 = go.Spot.TopLeft;\n    geo.spot2 = go.Spot.BottomRight;\n  }\n\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Download\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * 0, h * 1, true);\n  geo.add(fig);\n  var third = .1 / .3; // just to keep values consistent\n  // outer frame\n  // starts bottom left\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .8, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .755, h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .93, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .64, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .61, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .39, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .36, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .07, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .755), h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .8), h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * (1 - third)).close()); // arrow pointing down\n\n  var fig2 = new go.PathFigure(w * .40, h * 0, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .44));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .26, h * .44));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * .66));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .26), h * .44));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .44));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * 0).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Bin\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * 0, h * 1, true);\n  geo.add(fig);\n  var third = .1 / .3; // just to keep values consistent\n  // outer frame\n  // starts bottom left\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .8, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .755, h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .93, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .64, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .61, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .39, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .36, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .07, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .755), h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .8), h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * (1 - third)).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Upload\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * 0, h * 1, true);\n  geo.add(fig);\n  var third = .1 / .3; // just to keep values consistent\n  // outer frame\n  // starts bottom left\n\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .8, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .755, h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .93, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .64, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .61, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .39, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .36, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .07, h * (1 - third)));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .755), h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * .055));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .8), h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * (1 - third)).close());\n  var fig2 = new go.PathFigure(w * .5, h * 0, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .26, h * .25));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .25));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .63));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .63));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .25));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .74, h * .25).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"EmptyDrink\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * .15, h * 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .85, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, h * 1).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Drink\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * .15, h * 0, false);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .85, h * 0));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, h * 1).close());\n  var fig2 = new go.PathFigure(w * .235, h * .28, true);\n  geo.add(fig2);\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .765, h * .28));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .655, h * .97));\n  fig2.add(new go.PathSegment(go.PathSegment.Line, w * .345, h * .97).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"4Arrows\", function (shape, w, h) {\n  var geo = new go.Geometry();\n  var fig = new go.PathFigure(w * .5, h * 0, true);\n  geo.add(fig);\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .65, h * .25));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .25));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .35));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .5));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .65));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .55));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .55));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .65, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * 1));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .75));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .55));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * .55));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * .65));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * .5));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * .35));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .45));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .25));\n  fig.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * .25).close());\n  return geo;\n});\ngo.Shape.defineFigureGenerator(\"Connector\", \"Ellipse\");\ngo.Shape.defineFigureGenerator(\"Alternative\", \"TriangleUp\");\ngo.Shape.defineFigureGenerator(\"Merge\", \"TriangleUp\");\ngo.Shape.defineFigureGenerator(\"Decision\", \"Diamond\");\ngo.Shape.defineFigureGenerator(\"DataTransmissions\", \"Hexagon\");\ngo.Shape.defineFigureGenerator(\"Gate\", \"Crescent\");\ngo.Shape.defineFigureGenerator(\"Delay\", \"HalfEllipse\");\ngo.Shape.defineFigureGenerator(\"Input\", \"Parallelogram1\");\ngo.Shape.defineFigureGenerator(\"ManualLoop\", \"ManualOperation\");\ngo.Shape.defineFigureGenerator(\"ISOProcess\", \"Chevron\");\ngo.Shape.defineFigureGenerator(\"MessageToUser\", \"SquareArrow\");\ngo.Shape.defineFigureGenerator(\"MagneticData\", \"Cylinder1\");\ngo.Shape.defineFigureGenerator(\"DirectData\", \"Cylinder4\");\ngo.Shape.defineFigureGenerator(\"StoredData\", \"DataStorage\");\ngo.Shape.defineFigureGenerator(\"SequentialData\", \"MagneticTape\");\ngo.Shape.defineFigureGenerator(\"Subroutine\", \"Procedure\");","map":null,"metadata":{},"sourceType":"script"}